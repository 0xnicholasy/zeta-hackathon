/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Universal, UniversalInterface } from "../../contracts/Universal";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "gatewayAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "HelloEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "revertMessage",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct RevertContext",
        name: "",
        type: "tuple",
      },
    ],
    name: "RevertEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "receiver",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isArbitraryCall",
            type: "bool",
          },
        ],
        internalType: "struct CallOptions",
        name: "callOptions",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "revertAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "callOnRevert",
            type: "bool",
          },
          {
            internalType: "address",
            name: "abortAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "revertMessage",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "onRevertGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct RevertOptions",
        name: "revertOptions",
        type: "tuple",
      },
    ],
    name: "call",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "receiverArray",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "zrc20Array",
        type: "address[]",
      },
      {
        internalType: "bytes",
        name: "messages",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isArbitraryCall",
            type: "bool",
          },
        ],
        internalType: "struct CallOptions",
        name: "callOptions",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "revertAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "callOnRevert",
            type: "bool",
          },
          {
            internalType: "address",
            name: "abortAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "revertMessage",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "onRevertGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct RevertOptions",
        name: "revertOptions",
        type: "tuple",
      },
    ],
    name: "callMulti",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract GatewayZEVM",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "senderEVM",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
        ],
        internalType: "struct MessageContext",
        name: "context",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "onCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "revertMessage",
            type: "bytes",
          },
        ],
        internalType: "struct RevertContext",
        name: "revertContext",
        type: "tuple",
      },
    ],
    name: "onRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "receiver",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "revertAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "callOnRevert",
            type: "bool",
          },
          {
            internalType: "address",
            name: "abortAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "revertMessage",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "onRevertGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct RevertOptions",
        name: "revertOptions",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "receiver",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isArbitraryCall",
            type: "bool",
          },
        ],
        internalType: "struct CallOptions",
        name: "callOptions",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "revertAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "callOnRevert",
            type: "bool",
          },
          {
            internalType: "address",
            name: "abortAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "revertMessage",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "onRevertGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct RevertOptions",
        name: "revertOptions",
        type: "tuple",
      },
    ],
    name: "withdrawAndCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a034609257601f61145b38819003918201601f19168301916001600160401b03831184841017609757808492602094604052833981010312609257516001600160a01b038116908190036092576080526040516113ad90816100ae8239608051818181610188015281816104750152818161069701528181610a2401528181610cb601528181610d960152610ed80152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c806306cb898314610dc5578063116191b614610d805780635bcfd61614610c5a5780637b15118b146108c75780637c0dcb5f14610592578063c9028a36146104405763fe5f4dd01461006a57600080fd5b3461043d5760c036600319011261043d57600435906001600160401b03821161043d573660238301121561043d578160040135916100a7836111c2565b926100b5604051948561100f565b80845260051b8101602401602084013682116104395760248301905b82821061040a5785856024356001600160401b038111610406573660238201121561040657806004013590610105826111c2565b91610113604051938461100f565b8083526024602084019160051b8301019136831161040257602401905b8282106103ea575050506044356001600160401b0381116103e6576101599036906004016110d9565b9061016336611106565b9260a4356001600160401b0381116103e257610186909491943690600401611137565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169190865b86518110156103de576001600160a01b036101cf828961134d565b511660408451602482518094819363fc5fecd560e01b835260048301525afa90811561033b5789916103ae575b506001600160a01b0361020f838a61134d565b516040516323b872dd60e01b81523360048201523060248201526044810184905291602091839160649183918f91165af19081156103a3578a91610385575b50156103765788906020906102a8906001600160a01b0361026f868d61134d565b5160405163095ea7b360e01b81526001600160a01b038b1660048201526024810193909352919485939190921691839182906044820190565b03925af1801561033b5761034a575b506102c2818a61134d565b516001600160a01b036102d5838a61134d565b511690853b156103465786918a9161030486888c60405197889687966306cb898360e01b8852600488016112ca565b038183895af1801561033b57908991610322575b50506001016101b4565b8161032c9161100f565b61033757878a610318565b8780fd5b6040513d8b823e3d90fd5b8980fd5b61036a9060203d811161036f575b610362818361100f565b810190611200565b6102b7565b503d610358565b6312171d8360e31b8952600489fd5b61039d915060203d811161036f57610362818361100f565b8b61024e565b6040513d8c823e3d90fd5b6103cf915060403d81116103d7575b6103c7818361100f565b8101906111d9565b90508a6101fc565b503d6103bd565b8780f35b8580fd5b8280fd5b602080916103f7846110c5565b815201910190610130565b8480fd5b5080fd5b81356001600160401b0381116103e25760209161042e83926024369189010161107b565b8152019101906100d1565b8380fd5b80fd5b503461043d57602036600319011261043d576004356001600160401b038111610406578036039060806003198301126103e6577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361058457604051916040835260136040840152722932bb32b93a1037b7102d32ba30a1b430b4b760691b60608401526080602084015260018060a01b036104e8836004016110c5565b1660808401526001600160a01b03610502602484016110c5565b1660a0840152604482013560c0840152606482013590602219018112156104395701906024600483013592016001600160401b0383116104395782360381136104395761057e82917fa7a2dd1f61a16e9be16558337ccaf27e4bb90761ccfab75065f0003f25a1403794608060e0850152610100840191611259565b0390a180f35b6282b42960e81b8352600483fd5b503461043d57608036600319011261043d576004356001600160401b038111610406576105c390369060040161107b565b906024356105cf6110af565b906064356001600160401b038111610439576105ef903690600401611137565b6040805163d9eeebed60e01b815291936001600160a01b0316919081600481855afa9081156108bc578590869261089a575b506001600160a01b03169582871491821561089357610640818661132a565b925b6040516323b872dd60e01b8152336004820152306024820152604481018590526020816064818c8a5af190811561033b578991610874575b50156108655760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201959095526020816044818c8a5af1801561033b57610848575b5015610765575b50859650813b156103e2578561071c91610738829660405198899788968795637c0dcb5f60e01b8752608060048801526084870190611218565b926024860152604485015260031984830301606485015261127a565b03925af1801561075a576107495750f35b816107539161100f565b61043d5780f35b6040513d84823e3d90fd5b6040516323b872dd60e01b8152336004820152306024820152604481018290526020816064818b8d5af190811561083d57889161081e575b501561080f5760405163095ea7b360e01b81526001600160a01b038416600482015260248101919091529596879690602090829060449082908b905af1801561080457156106e2576107fd9060203d60201161036f57610362818361100f565b50386106e2565b6040513d89823e3d90fd5b6312171d8360e31b8752600487fd5b610837915060203d60201161036f57610362818361100f565b3861079d565b6040513d8a823e3d90fd5b6108609060203d60201161036f57610362818361100f565b6106db565b6312171d8360e31b8852600488fd5b61088d915060203d60201161036f57610362818361100f565b3861067a565b8492610642565b90506108b5915060403d6040116103d7576103c7818361100f565b9038610621565b6040513d87823e3d90fd5b503461043d5760e036600319011261043d576004356001600160401b038111610406576108f890369060040161107b565b90602435916109056110af565b6064356001600160401b038111610439576109249036906004016110d9565b9490926040366083190112610402576040519261094084610fde565b608435845260a4358015158103610c5657602085015260c4356001600160401b038111610c5657610975903690600401611137565b9060018060a01b0316928451926040519363fc5fecd560e01b85526004850152604084602481885afa93841561083d5788908995610c32575b506001600160a01b031698858a14948515610c2b576109cd818561132a565b955b6040516323b872dd60e01b8152336004820152306024820152604481018890526020816064818f8d5af1908115610bf2578c91610c0c575b5015610bfd5760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201989098526020816044818f8d5af18015610bf257610bd5575b5015610af8575b50889950843b15610af4578896610ab194610ae3610acd8a96610738956040519d8e9c8d9b8c9a637b15118b60e01b8c5260e060048d015260e48c0190611218565b9360248b015260448a01526003198984030160648a0152611259565b83516084870152602090930151151560a4860152565b8382036003190160c485015261127a565b8880fd5b6040516323b872dd60e01b8152336004820152306024820152604481018290526020818d818e816064810103925af1908115610bca578b91610bab575b5015610b9c5760405163095ea7b360e01b81526001600160a01b0387166004820152602481019190915298998a9990602090829060449082908e905af180156103a35715610a6f57610b959060203d60201161036f57610362818361100f565b5038610a6f565b6312171d8360e31b8a5260048afd5b610bc4915060203d60201161036f57610362818361100f565b38610b35565b6040513d8d823e3d90fd5b610bed9060203d60201161036f57610362818361100f565b610a68565b6040513d8e823e3d90fd5b6312171d8360e31b8b5260048bfd5b610c25915060203d60201161036f57610362818361100f565b38610a07565b83956109cf565b9050610c4e91945060403d6040116103d7576103c7818361100f565b9390386109ae565b8680fd5b503461043d57608036600319011261043d576004356001600160401b03811161040657606090600319903603011261043d57610c94611099565b506064356001600160401b03811161040657610cb49036906004016110d9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610584578101906020818303126103e6578035906001600160401b03821161043957019080601f830112156103e657610d4361057e918360207f39f8c79736fed93bca390bb3d6ff7da07482edb61cd7dafcfba496821d6ab7a395359101611030565b6040519182916040835260126040840152712432b636379037b7102d32ba30a1b430b4b760711b6060840152608060208401526080830190611218565b503461043d578060031936011261043d576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461043d5760c036600319011261043d576004356001600160401b03811161040657610df690369060040161107b565b90610dff611099565b916044356001600160401b0381116103e657610e1f9036906004016110d9565b9190610e2a36611106565b9160a4356001600160401b0381116103e257610e4a903690600401611137565b9560018060a01b038116968451926040519363fc5fecd560e01b855260048501526040846024818c5afa93841561083d578894610fbb575b506040516323b872dd60e01b8152336004820152306024820152604481018590526020816064818c8e5af190811561033b578991610f9c575b50156108655760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482018190526024820195909552979896978997602090829060449082908c905af1801561083d57610f7f575b50833b15610c5657610f5387969287936040519a8b98899788966306cb898360e01b8852600488016112ca565b03925af18015610f7257610f645780f35b610f6d9161100f565b388180f35b50604051903d90823e3d90fd5b610f979060203d60201161036f57610362818361100f565b610f26565b610fb5915060203d60201161036f57610362818361100f565b38610ebb565b610fd591945060403d6040116103d7576103c7818361100f565b90509238610e82565b604081019081106001600160401b03821117610ff957604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b03821117610ff957604052565b9291926001600160401b038211610ff95760405191611059601f8201601f19166020018461100f565b829481845281830111611076578281602093846000960137010152565b600080fd5b9080601f830112156110765781602061109693359101611030565b90565b602435906001600160a01b038216820361107657565b604435906001600160a01b038216820361107657565b35906001600160a01b038216820361107657565b9181601f84011215611076578235916001600160401b038311611076576020838186019501011161107657565b6040906063190112611076576040519061111f82610fde565b60643582526084358281151582036110765760200152565b91909160a081840312611076576040519060a082018281106001600160401b03821117610ff957604052819361116c826110c5565b83526020820135801515810361107657602084015261118d604083016110c5565b60408401526060820135916001600160401b038311611076576111b6608093928493830161107b565b60608501520135910152565b6001600160401b038111610ff95760051b60200190565b91908260409103126110765781516001600160a01b03811681036110765760209092015190565b90816020910312611076575180151581036110765790565b919082519283825260005b848110611244575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201611223565b908060209392818452848401376000828201840152601f01601f1916010190565b9060018060a01b03825116815260208201511515602082015260018060a01b0360408301511660408201526080806112c1606085015160a0606086015260a0850190611218565b93015191015290565b9291611096969461131d936112ea6113079460c0885260c0880190611218565b6001600160a01b0390931660208701528583036040870152611259565b8451606084015260209094015115156080830152565b60a081840391015261127a565b9190820180921161133757565b634e487b7160e01b600052601160045260246000fd5b80518210156113615760209160051b010190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220979cf91d51a93b640322127583286967a909456bdec3e11ab32525d53d08b70f64736f6c634300081a0033";

type UniversalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniversalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Universal__factory extends ContractFactory {
  constructor(...args: UniversalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    gatewayAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Universal> {
    return super.deploy(gatewayAddress, overrides || {}) as Promise<Universal>;
  }
  override getDeployTransaction(
    gatewayAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gatewayAddress, overrides || {});
  }
  override attach(address: string): Universal {
    return super.attach(address) as Universal;
  }
  override connect(signer: Signer): Universal__factory {
    return super.connect(signer) as Universal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniversalInterface {
    return new utils.Interface(_abi) as UniversalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Universal {
    return new Contract(address, _abi, signerOrProvider) as Universal;
  }
}
