/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockPriceOracle,
  MockPriceOracleInterface,
} from "../../../contracts/mocks/MockPriceOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "isValidPrice",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "priceInUSD",
        type: "uint256",
      },
    ],
    name: "setPriceInUSD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460155761033e908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c908162e4768b1461023d5750806341976e091461017457806351dd2a87146101475780635a7e19891461010d57637916e1bd1461005557600080fd5b346101085760403660031901126101085761006e6102ad565b60243590670de0b6b3a7640000820291808304670de0b6b3a764000014901517156100f2576001600160a01b0316600081815260208181526040808320948555600182528083204290819055928252935484519081529081019190915290917fb556fac599c3c70efb9ab1fa725ecace6c81cc48d1455f886607def065f3e0c091a2005b634e487b7160e01b600052601160045260246000fd5b600080fd5b34610108576020366003190112610108576001600160a01b0361012e6102ad565b1660005260016020526020604060002054604051908152f35b3461010857602036600319011261010857602061016a6101656102ad565b6102c3565b6040519015158152f35b346101085760203660031901126101085761018d6102ad565b60018060a01b0381169081600052600060205260406000205415610208576101b4906102c3565b156101d15760005260006020526020604060002054604051908152f35b60405162461bcd60e51b815260206004820152600f60248201526e507269636520746f6f207374616c6560881b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c141c9a58d9481b9bdd081cd95d609a1b6044820152606490fd5b34610108576040366003190112610108577fb556fac599c3c70efb9ab1fa725ecace6c81cc48d1455f886607def065f3e0c060406102796102ad565b6001600160a01b031660008181526020818152838220602435908190556001825291849020429081905591865285015292a2005b600435906001600160a01b038216820361010857565b6001600160a01b0316600081815260208190526040902054151590816102e7575090565b9050600052600160205260406000205442034281116100f257610e1010159056fea2646970667358221220bd5664fd1838f6390d8c6dc7495b75c4398830dddbee059ab76d653afcd77a1864736f6c634300081a0033";

type MockPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPriceOracle__factory extends ContractFactory {
  constructor(...args: MockPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockPriceOracle> {
    return super.deploy(overrides || {}) as Promise<MockPriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockPriceOracle {
    return super.attach(address) as MockPriceOracle;
  }
  override connect(signer: Signer): MockPriceOracle__factory {
    return super.connect(signer) as MockPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPriceOracleInterface {
    return new utils.Interface(_abi) as MockPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as MockPriceOracle;
  }
}
