/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SimpleLendingProtocol,
  SimpleLendingProtocolInterface,
} from "../../contracts/SimpleLendingProtocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "gatewayAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "AssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "HealthFactorTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientCollateral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gasTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "InsufficientGasFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collateralAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "debtAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "repaidDebt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seizedCollateral",
        type: "uint256",
      },
    ],
    name: "Liquidate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Supply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "priceInUSD",
        type: "uint256",
      },
    ],
    name: "addAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "bool",
        name: "isSupported",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "borrowCrossChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canBorrow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IGatewayZEVM",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetConfig",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isSupported",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ISimpleLendingProtocol.Asset",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBorrowBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getCollateralValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getDebtValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getHealthFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getSupplyBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSupportedAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedAssetsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalCollateralValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalDebtValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getWithdrawGasFee",
    outputs: [
      {
        internalType: "address",
        name: "gasToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAssetAdded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isLiquidatable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "debtAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "maxAvailableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "maxAvailableBorrows",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBorrowAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "maxAvailableBorrowsInUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBorrowUsdValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "senderEVM",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
        ],
        internalType: "struct MessageContext",
        name: "context",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "onCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "revertMessage",
            type: "bytes",
          },
        ],
        internalType: "struct RevertContext",
        name: "revertContext",
        type: "tuple",
      },
    ],
    name: "onRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supportedAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "priceInUSD",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userBorrows",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSupplies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawCrossChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461013d57601f61368538819003918201601f19168301916001600160401b0383118484101761014257808492604094855283398101031261013d5780516001600160a01b038116919082900361013d57602001516001600160a01b038116919082900361013d576001600055811561012757600180546001600160a01b03198116841790915560405192906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360805261352c908161015982396080518181816103b40152818161060401528181610655015281816107e201528181610d9e01528181610e0801528181610fef0152818161173001528181611931015281816122cb0152818161265301528181612fb801526130a30152f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c8063028cc65114611984578063042e02cf14611960578063116191b61461191b578063118e31b7146118a35780631eee3aa3146118ee578063234a14f9146118a3578063293a50771461187f57806338a6c25e1461185b578063457972de146117d25780634aa967b0146117a55780634f04cb67146117815780635bcfd616146116b35780635ceae9c4146116935780635d0765951461166657806360a8b18a1461162c57806366a6a4bd1461150a57806368625807146114ec57806369328dec146114025780636c648fc4146113de5780636c665a55146112b95780636ec3ab6714611249578063715018a6146111ec5780638019f0e1146111ad5780638b2a4df5146111865780638da5cb5b1461115d57806394691da0146111435780639aac2c531461111f578063a6d53fbd14610c77578063aab3f86814610a23578063af9f8390146104c6578063ba37773114610471578063c68dbb371461042d578063c9028a3614610380578063f11b818814610338578063f2fde38b146102af578063f9cf59ea146101e25763fe6bcd7c146101b457600080fd5b346101df5760203660031901126101df5760206101d76101d26119cf565b612ece565b604051908152f35b80fd5b50346101df5760203660031901126101df576001600160a01b036102046119cf565b1690818152600260205260ff6040822054161561029d576040805163d9eeebed60e01b815292839060049082905afa91821561029057819261025e575b50604080516001600160a01b039290921682526020820192909252f35b9050610282915060403d604011610289575b61027a8183611b68565b810190612deb565b9038610241565b503d610270565b50604051903d90823e3d90fd5b602491632777a68f60e11b8252600452fd5b50346101df5760203660031901126101df576102c96119cf565b6102d1612f12565b6001600160a01b0316801561032457600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b50346101df5760203660031901126101df5760409081906001600160a01b0361035f6119cf565b168152600260205220600160ff825416910154825191151582526020820152f35b50346101df5760203660031901126101df5760043567ffffffffffffffff811161041b576080600319823603011261041b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361041f5760248101356001600160a01b03811691839183900361041b5760206000805160206134d78339815191529160446040519101358152a380f35b5080fd5b6282b42960e81b8252600482fd5b50346101df5760203660031901126101df57600435906005548210156101df57602061045883611ac1565b905460405160039290921b1c6001600160a01b03168152f35b50346101df5760403660031901126101df57604061048d6119cf565b916104966119e5565b9260018060a01b031681526003602052209060018060a01b03166000526020526020604060002054604051908152f35b50346101df576104d536611a83565b93929190506104e261310f565b6001600160a01b0382168084526002602052604084205490929060ff1615610a0f578115610a00576040516370a0823160e01b8152306004820152602081602481875afa9081156109a25790839186916109cb575b50106109bc57610548828233612c43565b156109ad576105578282613179565b33845260046020526040842083600052602052604060002061057a838254611d3a565b90556040805163d9eeebed60e01b8152959086600481875afa80156109a2578596869161097d575b506001600160a01b0390961695838588036107ab5750836105c892939495969750611ba3565b916040516370a0823160e01b8152306004820152602081602481895afa80156107a05785918891610766575b50106107575785929190610632857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316886132ab565b60405160609290921b6bffffffffffffffffffffffff19166020830152601482527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610688603484611b68565b6040519385855261069a602086611b68565b604051946106a786611b4c565b3086528660208701528660408701526060860152856080860152813b15610753578580946106eb60405197889687958694637c0dcb5f60e01b865260048601612e4f565b03925af180156107485761072f575b50506040519081527f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b5260203392a36001815580f35b8161073991611b68565b6107445782386106fa565b8280fd5b6040513d84823e3d90fd5b8580fd5b63bb55fd2760e01b8652600486fd5b9150506020813d602011610798575b8161078260209383611b68565b8101031261079357849051386105f4565b600080fd5b3d9150610775565b6040513d89823e3d90fd5b92906040516370a0823160e01b81523060048201526020816024818a5afa90811561097257908691899161093d575b501061092e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108158682896132ab565b6040516370a0823160e01b81523360048201526020816024818d5afa9081156109235789916108f1575b5082811061089b576040516323b872dd60e01b8152336004820152306024820152604481018490526020816064818d8f5af19081156108e6578a916108b7575b501561089b575090610896918899989697986132ab565b610632565b63aaad7f2960e01b895260048a90526024839052604452606488fd5b6108d9915060203d6020116108df575b6108d18183611b68565b810190612e12565b3861087f565b503d6108c7565b6040513d8c823e3d90fd5b90506020813d60201161091b575b8161090c60209383611b68565b8101031261079357513861083f565b3d91506108ff565b6040513d8b823e3d90fd5b63bb55fd2760e01b8752600487fd5b9150506020813d60201161096a575b8161095960209383611b68565b8101031261079357859051386107da565b3d915061094c565b6040513d8a823e3d90fd5b905061099991965060403d6040116102895761027a8183611b68565b959095386105a2565b6040513d87823e3d90fd5b633a23d82560e01b8452600484fd5b63bb55fd2760e01b8452600484fd5b9150506020813d6020116109f8575b816109e760209383611b68565b810103126107935782905138610537565b3d91506109da565b63162908e360e11b8452600484fd5b632777a68f60e11b84526004839052602484fd5b50346101df5760803660031901126101df57610a3d6119cf565b610a456119e5565b906044356001600160a01b03811690819003610c735760643592610a6761310f565b6001600160a01b03168085526002602052604085205490939060ff16158015610c5c575b610c48578015610c395760018060a01b03831692838652600460205260408620836000526020528160406000205410610c2a57610ac790611af2565b15610c1b578185526002602052610ae5600160408720015482611bf4565b606981029080820460691490151715610c0757848652600260205260016040872001549081606402916064830403610bf35790610b2191611bd4565b90838652600360205260408620856000526020528160406000205410610be457610b4d813033866133f0565b838652600460205260408620836000526020526040600020610b70828254611ba3565b9055838652600360205260408620856000526020526040600020610b95838254611ba3565b9055610ba2823387613131565b604051928352602083015260408201527fac8bbd8fb7420b3123cf9e24d34551e40514ea69c5a1e97c10e513aaf06e7e42339160608180030190a46001815580f35b633a23d82560e01b8652600486fd5b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b86526011600452602486fd5b63317416e560e11b8552600485fd5b63162908e360e11b8652600486fd5b63162908e360e11b8552600485fd5b632777a68f60e11b85526004849052602485fd5b50818552600260205260ff60408620541615610a8b565b8380fd5b50346101df57610c8636611a83565b9050610c9061310f565b6001600160a01b0383168085526002602052604085205490939060ff1615610c48578215610c39573385526003602052604085208486526020528260408620541061111057610ce0838233612a7c565b1561110157610cef8382613179565b33855260036020526040852084865260205260408520610d10848254611ba3565b90556040805163d9eeebed60e01b81529081600481885afa80156110f657869187916110d5575b5084916001600160a01b0316868103610f4a5750610d56915084611ba3565b6040516370a0823160e01b8152306004820152602081602481895afa80156107a05785918891610f11575b50106107575760405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526024810185905286929190602081604481878b5af18015610ee357610ef2575b505b60405160609490941b6bffffffffffffffffffffffff19166020850152601484527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690610e3c603486611b68565b60405194848652610e4e602087611b68565b60405195610e5b87611b4c565b3087528560208801528560408801526060870152846080870152823b15610eee578490610e9e60405197889687958694637c0dcb5f60e01b865260048601612e4f565b03925af18015610ee357610ecf575b506040519081526000805160206134d783398151915260203392a36001815580f35b83610edc91949294611b68565b9138610ead565b6040513d86823e3d90fd5b8480fd5b610f0a9060203d6020116108df576108d18183611b68565b5038610de3565b9150506020813d602011610f42575b81610f2d60209383611b68565b81010312610f3e5784905138610d81565b8680fd5b3d9150610f20565b6040516370a0823160e01b81523060048201526020816024818b5afa80156109235787918a916110a0575b5010611091576040516370a0823160e01b8152336004820152602081602481855afa90811561092357899161105b575b506040516323b872dd60e01b8152336004820152306024820152604481018490526020816064818d875af19081156108e6578a9161103c575b501561102257508793929161101d917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906132ab565b610de5565b606492899263aaad7f2960e01b8452600452602452604452fd5b611055915060203d6020116108df576108d18183611b68565b38610fde565b90506020813d602011611089575b8161107660209383611b68565b81010312611085575138610fa5565b8880fd5b3d9150611069565b63bb55fd2760e01b8852600488fd5b9150506020813d6020116110cd575b816110bc60209383611b68565b810103126110855786905138610f75565b3d91506110af565b90506110f0915060403d6040116102895761027a8183611b68565b38610d37565b6040513d88823e3d90fd5b633a23d82560e01b8552600485fd5b631e9acf1760e31b8552600485fd5b50346101df57602061113961113336611a49565b91612c43565b6040519015158152f35b50346101df57602061113961115736611a49565b91612a7c565b50346101df57806003193601126101df576001546040516001600160a01b039091168152602090f35b50346101df576111a661119836611a0f565b916111a161310f565b613053565b6001815580f35b50346101df5760203660031901126101df5760209060ff906040906001600160a01b036111d86119cf565b168152600684522054166040519015158152f35b50346101df57806003193601126101df57611205612f12565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101df5760203660031901126101df57604080916112676119cf565b816020845161127581611b1a565b82815201526001600160a01b03168152600260205220815161129681611b1a565b6020600160ff845416151593848452015491019081528251918252516020820152f35b50346101df576112c836611a0f565b6112d061310f565b6001600160a01b0383168085526002602052604085205490939060ff1615610c48578215610c39576040516370a0823160e01b8152306004820152602081602481885afa80156110f657849187916113a9575b501061139a57826113349133612c43565b156109ad5781611367913386526004602052604086208587526020526040862061135f838254611d3a565b905584613131565b6040519081527f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b5260203392a36001815580f35b63bb55fd2760e01b8552600485fd5b9150506020813d6020116113d6575b816113c560209383611b68565b810103126107535783905138611323565b3d91506113b8565b50346101df5760203660031901126101df5760206101d76113fd6119cf565b612a05565b50346101df5761141136611a0f565b61141961310f565b6020908460405161142a8482611b68565b526001600160a01b03841680865260028352604086205490949060ff16156114d8578315610c2a5733865260038352604086208587528352836040872054106114c957836114789133612a7c565b1561110157906114b9836000805160206134d78339815191529333885260038452604088208789528452604088206114b1838254611ba3565b905586613131565b6040519283523392a36001815580f35b631e9acf1760e31b8652600486fd5b632777a68f60e11b86526004859052602486fd5b50346101df57806003193601126101df576020600554604051908152f35b50346101df5760403660031901126101df576115246119cf565b60243590611530612f12565b670de0b6b3a7640000820291808304670de0b6b3a764000014901517156116185760016040519161156083611b1a565b81835260208301938452818060a01b0316928385526002602052604085209251151560ff8019855416911617835551910155808252600660205260ff604083205416156115ab575080f35b60055468010000000000000000811015611604578060016115cf9201600555611ac1565b81546001600160a01b0360039290921b91821b19169083901b1790558152600660205260408120805460ff1916600117905580f35b634e487b7160e01b83526041600452602483fd5b634e487b7160e01b83526011600452602483fd5b50346101df5760203660031901126101df576004359060055482101561165757602061045883611ac1565b63162908e360e11b8152600490fd5b50346101df5760403660031901126101df5760206101d76116856119cf565b61168d6119e5565b90612832565b50346101df576111a66116a536611a0f565b916116ae61310f565b612f3b565b50346101df5760803660031901126101df5760043567ffffffffffffffff811161041b5760609060031990360301126101df576116ee6119e5565b906064359167ffffffffffffffff831161041b573660238401121561041b5782600401359067ffffffffffffffff8211610744573660248386010111610744577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036117735760246117709394019060443590611fb1565b80f35b6282b42960e81b8352600483fd5b50346101df5760203660031901126101df5760206101d76117a06119cf565b611eb2565b50346101df5760403660031901126101df5760206101d76117c46119cf565b6117cc6119e5565b90611e21565b50346101df5760403660031901126101df576117ec6119cf565b602435906117f8612f12565b6001600160a01b03168083526002602052604083205460ff161561184957670de0b6b3a7640000820291808304670de0b6b3a764000014901517156116185782526002602052600160408320015580f35b632777a68f60e11b8352600452602482fd5b50346101df5760203660031901126101df5760206101d761187a6119cf565b611dc5565b50346101df5760203660031901126101df5760206101d761189e6119cf565b611d47565b50346101df5760403660031901126101df5760406020916118c26119cf565b6118ca6119e5565b6001600160a01b039182168352600485528383209116825283522054604051908152f35b50346101df5760403660031901126101df5760206101d761190d6119cf565b6119156119e5565b90611c07565b50346101df57806003193601126101df576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101df5760203660031901126101df57602061113961197f6119cf565b611af2565b50346101df5760403660031901126101df5760406020916119a36119cf565b6119ab6119e5565b6001600160a01b039182168352600385528383209116825283522054604051908152f35b600435906001600160a01b038216820361079357565b602435906001600160a01b038216820361079357565b35906001600160a01b038216820361079357565b6060906003190112610793576004356001600160a01b03811681036107935790602435906044356001600160a01b03811681036107935790565b6060906003190112610793576004356001600160a01b038116810361079357906024356001600160a01b0381168103610793579060443590565b6080906003190112610793576004356001600160a01b0381168103610793579060243590604435906064356001600160a01b03811681036107935790565b600554811015611adc57600560005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b611afb90612ece565b670f43fc2c04ee000081109081611b10575090565b6000191415919050565b6040810190811067ffffffffffffffff821117611b3657604052565b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff821117611b3657604052565b90601f8019910116810190811067ffffffffffffffff821117611b3657604052565b90816020910312610793575160ff811681036107935790565b91908203918211611bb057565b634e487b7160e01b600052601160045260246000fd5b604d8111611bb057600a0a90565b8115611bde570490565b634e487b7160e01b600052601260045260246000fd5b81810292918115918404141715611bb057565b6001600160a01b0390811660009081526003602090815260408083209490931680835293815282822054600282529183902060010154925163313ce56760e01b81529293919291829060049082905afa8015611d2e5760ff91600091611cff575b5016816012821015611ca957506012039160128311611bb057611ca0611ca592611c9a670de0b6b3a764000095611bc6565b90611bf4565b611bf4565b0490565b9160128211611cc8575b5050670de0b6b3a764000091611ca591611bf4565b9150916011198301928311611bb057611cf6611ca592611cf0670de0b6b3a764000095611bc6565b90611bd4565b91819350611cb3565b611d21915060203d602011611d27575b611d198183611b68565b810190611b8a565b38611c68565b503d611d0f565b6040513d6000823e3d90fd5b91908201809211611bb057565b600554600091825b828110611d5c5750505090565b611d6581611ac1565b90546001600160a01b03848116600090815260046020908152604080832060039690961b9490941c909216808252939091522054611da7575b50600101611d4f565b60019194611db8611dbe9285611e21565b90611d3a565b9390611d9e565b611dd7611dd182612a05565b91611d47565b908015611e1a57670de0b6b3a76400008102908104670de0b6b3a764000003611bb0576714d1120d7b16000090049080821115611e1a57611e1791611ba3565b90565b5050600090565b6001600160a01b0390811660009081526004602081815260408084209590941680845294815283832054600282529284902060010154935163313ce56760e01b815293949293929091839182905afa8015611d2e5760ff91600091611cff575016816012821015611ca957506012039160128311611bb057611ca0611ca592611c9a670de0b6b3a764000095611bc6565b6001600160a01b031660008181526002602052604090205460ff1615611f31576020602491604051928380926370a0823160e01b82523060048301525afa908115611d2e57600091611f02575090565b90506020813d602011611f29575b81611f1d60209383611b68565b81010312610793575190565b3d9150611f10565b50600090565b81601f820112156107935780359067ffffffffffffffff8211611b365760405192611f6c601f8401601f191660200185611b68565b8284526020838301011161079357816000926020809301838601378301015290565b60005b838110611fa15750506000910152565b8181015183820152602001611f91565b926080810361210f5782016040838203126107935782359067ffffffffffffffff821161079357611fe3918401611f37565b916001600160a01b0390611ff9906020016119fb565b1691604051906020820181519261202c6020828186019661201b81878a611f8e565b81010301601f198101835282611b68565b519020604051602081019065737570706c7960d01b825260068152612052602682611b68565b5190200361206757505061206592613053565b565b6120836020604051809361201b83830196879251928391611f8e565b519020604051602081019064726570617960d81b8252600581526120a8602582611b68565b5190201461210657505050505b60405162461bcd60e51b815260206004820152602360248201527f496e76616c6964206f7065726174696f6e206f72206d65737361676520666f726044820152621b585d60ea1b6064820152608490fd5b61206592612f3b565b905060e08193929314612126575b505050506120b5565b82019060009160a08482031261074457833567ffffffffffffffff8111610c735790612153918501611f37565b91612160602085016119fb565b936040810135926121786080606084013593016119fb565b9560018060a01b03169460405190602082018151926121a26020828186019661201b81878a611f8e565b51902060405160208101906f3137b93937bba1b937b9b9a1b430b4b760811b8252601081526121d2603082611b68565b519020036125165750506001600160a01b0381168084526002602052604084205490969060ff1615612502578415610a00576040516370a0823160e01b81523060048201526020816024818b5afa9081156109a25790869186916124cd575b50106124be57612242858388612c43565b156109ad576122518583613179565b858452600460205260408420876000526020526040600020612274868254611d3a565b90556040805163d9eeebed60e01b81529190826004818b5afa9081156109a2578592869261249a575b5086928392906001600160a01b03168a1461241b575b5060405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201949094526020816044818a8e5af180156107a0576123fe575b50604051906bffffffffffffffffffffffff199060601b1660208201526014815261233b603482611b68565b60405194602086015260208552612353604086611b68565b6040519461236086611b4c565b888652600160208701528860408701526060860152620493e06080860152823b15610753579085809493926123ab60405197889687958694637c0dcb5f60e01b865260048601612e4f565b03925af18015610748576123e9575b505060207f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b5291604051908152a3565b6123f4828092611b68565b6101df57806123ba565b6124169060203d6020116108df576108d18183611b68565b61230f565b909250612429915086611ba3565b6040516370a0823160e01b81523060048201528692906020816024818d5afa9081156107a0579088918891612465575b50106114c957386122b3565b9150506020813d602011612492575b8161248160209383611b68565b810103126107935787905138612459565b3d9150612474565b9092506124b6915060403d6040116102895761027a8183611b68565b90913861229d565b631e9acf1760e31b8452600484fd5b9150506020813d6020116124fa575b816124e960209383611b68565b810103126107935785905138612231565b3d91506124dc565b632777a68f60e11b84526004879052602484fd5b6125326020604051809361201b83830196879251928391611f8e565b5190206040516020810190713bb4ba34323930bba1b937b9b9a1b430b4b760711b825260128152612564603282611b68565b5190201461257c57505050505050503880808061211d565b6001600160a01b0381168084526002602052604084205490969060ff1615612502578415610a0057858452600360205260408420878552602052846040852054106124be576125cc858388612a7c565b156109ad576125db8583613179565b858452600360205260408420878552602052604084206125fc868254611ba3565b90556040805163d9eeebed60e01b81529190826004818b5afa9081156109a2578592869261280e575b5086928392906001600160a01b03168a1461278f575b5060405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201949094526020816044818a8e5af180156107a057612772575b50604051906bffffffffffffffffffffffff199060601b166020820152601481526126c3603482611b68565b604051946020860152602085526126db604086611b68565b604051946126e886611b4c565b888652600160208701528860408701526060860152620493e06080860152823b156107535790858094939261273360405197889687958694637c0dcb5f60e01b865260048601612e4f565b03925af1801561074857916000805160206134d78339815191529391602093612762575b5050604051908152a3565b8161276c91611b68565b38612757565b61278a9060203d6020116108df576108d18183611b68565b612697565b90925061279d915086611ba3565b6040516370a0823160e01b81523060048201528692906020816024818d5afa9081156107a05790889188916127d9575b50106114c9573861263b565b9150506020813d602011612806575b816127f560209383611b68565b81010312610f3e57879051386127cd565b3d91506127e8565b90925061282a915060403d6040116102895761027a8183611b68565b909138612625565b919060018060a01b03169182600052600260205260ff60406000205416156129fe57612860611dd182612a05565b9080156129f657670de0b6b3a76400008102908104670de0b6b3a764000003611bb0576714d1120d7b1600009004818111156129f657906128a091611ba3565b82600052600260205260016040600020015480156129f657670de0b6b3a7640000820291808304670de0b6b3a76400001490151715611bb0576128e291611bd4565b60405163313ce56760e01b8152602081600481875afa8015611d2e5760ff916000916129d7575b5016601281101561299d576012039060128211611bb057612931602091611cf0602494611bc6565b935b6040516370a0823160e01b815230600482015292839182905afa908115611d2e5760009161296b575b508083116129675750565b9150565b906020823d602011612995575b8161298560209383611b68565b810103126101df5750513861295c565b3d9150612978565b9060128211156129ca576011198201918211611bb0576129c4602091611c9a602494611bc6565b93612933565b6024915060209093612933565b6129f0915060203d602011611d2757611d198183611b68565b38612909565b506000925050565b5060009150565b600554600091825b828110612a1a5750505090565b612a2381611ac1565b90546001600160a01b0384811660009081526003602081815260408084209690921b9490941c90921680825293909252902054612a64575b50600101612a0d565b60019194611db8612a759285611c07565b9390612a5b565b6040516370a0823160e01b81523060048201529092916001600160a01b031690602081602481855afa8015611d2e578391600091612c0e575b5010612c065760405163313ce56760e01b8152602081600481855afa8015611d2e5760ff91600091612be7575b5016826012821015612b89575060120360128111611bb057612b33611dd192612b1a612b4295611c9a670de0b6b3a764000095611bc6565b905b600052600260205260016040600020015490611bf4565b04612b3d84612a05565b611ba3565b908115612b8257670de0b6b3a7640000810290808204670de0b6b3a76400001490151715611bb0576714d1120d7b16000091612b7d91611bd4565b101590565b5050600190565b929060128111612baf575b5050670de0b6b3a7640000612b33612b4293611dd193612b1c565b9092506011198101908111611bb057612b33611dd192612bde612b4295611cf0670de0b6b3a764000095611bc6565b94509250612b94565b612c00915060203d602011611d2757611d198183611b68565b38612ae2565b505050600090565b9150506020813d602011612c3b575b81612c2a60209383611b68565b810103126107935782905138612ab5565b3d9150612c1d565b6040516370a0823160e01b81523060048201526001600160a01b039092169291602081602481875afa8015611d2e578391600091612db6575b5010612c0657612c8b81612a05565b9260405163313ce56760e01b8152602081600481855afa8015611d2e5760ff91600091612d97575b5016836012821015612d39575060120360128111611bb057612ceb612cf292612b1a612cf796611c9a670de0b6b3a764000095611bc6565b0491611d47565b611d3a565b908115612d3257670de0b6b3a7640000810290808204670de0b6b3a76400001490151715611bb0576714d1120d7b16000091612b7d91611bd4565b9050151590565b939060128111612d5f575b5050670de0b6b3a7640000612ceb612cf794612cf293612b1c565b9093506011198101908111611bb057612ceb612cf292612d8e612cf796611cf0670de0b6b3a764000095611bc6565b95509250612d44565b612db0915060203d602011611d2757611d198183611b68565b38612cb3565b9150506020813d602011612de3575b81612dd260209383611b68565b810103126107935782905138612c7c565b3d9150612dc5565b91908260409103126107935781516001600160a01b03811681036107935760209092015190565b90816020910312610793575180151581036107935790565b90602091612e4381518092818552858086019101611f8e565b601f01601f1916010190565b919290612e6490608084526080840190612e2a565b92602083015260018060a01b03166040820152606081830391015260018060a01b03825116815260208201511515602082015260018060a01b036040830151166040820152608080612ec5606085015160a0606086015260a0850190612e2a565b93015191015290565b612eda611dd182612a05565b8015612f0a57670de0b6b3a7640000820291808304670de0b6b3a76400001490151715611bb057611e1791611bd4565b505060001990565b6001546001600160a01b03163303612f2657565b63118cdaa760e01b6000523360045260246000fd5b6001600160a01b031660008181526002602052604090205490929060ff161561303e57811561302d576001600160a01b0316600081815260046020908152604080832086845282529091205491927f05f2eeda0e08e4b437f487c8d7d29b14537d15e3488170dc3de5dbdf8dac468492908181111561302657505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303613015575b83600052600482526040600020856000528252604060002061300a828254611ba3565b9055604051908152a3565b613021813033886133f0565b612fe7565b9050612fb6565b63162908e360e11b60005260046000fd5b82632777a68f60e11b60005260045260246000fd5b6001600160a01b031660008181526002602052604090205490929060ff161561303e57811561302d577fd1cf3d156d5f8f0d50f6c122ed609cec09d35c9b9fb3fff6ea0959134dae424e906020907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036130fe575b60018060a01b03169283600052600382526040600020856000528252604060002061300a828254611d3a565b61310a843033886133f0565b6130d2565b600260005414613120576002600055565b633ee5aeb560e01b60005260046000fd5b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448201929092526120659161317482606481015b03601f198101845283611b68565b613432565b6040805163d9eeebed60e01b81526001600160a01b0392909216929082600481865afa908115611d2e57600092600092613280575b506020600493946040519485809263313ce56760e01b82525afa928315611d2e5760009361325d575b5060405163313ce56760e01b81529293602090849060049082906001600160a01b03165afa928315611d2e5760009361322f575b5061321f60ff91826132279596169061348d565b93169061348d565b101561302d57565b613227935060ff918261325361321f9360203d602011611d2757611d198183611b68565b955050915061320b565b60049350613279602091823d8411611d2757611d198183611b68565b93506131d7565b6004935060209492506132a19060403d6040116102895761027a8183611b68565b92949093506131ae565b604051636eb1769f60e11b81523060048201526001600160a01b03838116602483018190529490831691602081604481865afa908115611d2e576000916133bc575b5061333694613344613303602094600094611d3a565b60405163095ea7b360e01b8682019081526001600160a01b03909416602482015260448101919091529687906064820190565b03601f198101885287611b68565b85519082865af1903d600051908361339d575b5050501561336457505050565b613174612065936040519063095ea7b360e01b602083015260248201526000604482015260448152613397606482611b68565b82613432565b919250906133b257503b15155b388080613357565b60019150146133aa565b90506020813d6020116133e8575b816133d760209383611b68565b8101031261079357516133366132ed565b3d91506133ca565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064820192909252612065916131748260848101613166565b906000602091828151910182855af115611d2e576000513d61348457506001600160a01b0381163b155b6134635750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b6001141561345c565b9060128110156134af576012039060128211611bb057611c9a611e1792611bc6565b9060128211156134d1576011198201918211611bb057611cf0611e1792611bc6565b90509056fe9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eba2646970667358221220a2c00a31d51b0593832715b71944771df151587f1ef7b68565cfbc4e8507463864736f6c634300081a0033";

type SimpleLendingProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleLendingProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleLendingProtocol__factory extends ContractFactory {
  constructor(...args: SimpleLendingProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    gatewayAddress: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleLendingProtocol> {
    return super.deploy(
      gatewayAddress,
      owner,
      overrides || {}
    ) as Promise<SimpleLendingProtocol>;
  }
  override getDeployTransaction(
    gatewayAddress: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gatewayAddress, owner, overrides || {});
  }
  override attach(address: string): SimpleLendingProtocol {
    return super.attach(address) as SimpleLendingProtocol;
  }
  override connect(signer: Signer): SimpleLendingProtocol__factory {
    return super.connect(signer) as SimpleLendingProtocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleLendingProtocolInterface {
    return new utils.Interface(_abi) as SimpleLendingProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleLendingProtocol {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleLendingProtocol;
  }
}
