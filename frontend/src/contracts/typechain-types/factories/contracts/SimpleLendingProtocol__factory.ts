/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SimpleLendingProtocol,
  SimpleLendingProtocolInterface,
} from "../../contracts/SimpleLendingProtocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "gatewayAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "AssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "HealthFactorTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientCollateral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gasTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "InsufficientGasFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collateralAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "debtAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "repaidDebt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seizedCollateral",
        type: "uint256",
      },
    ],
    name: "Liquidate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Supply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "priceInUSD",
        type: "uint256",
      },
    ],
    name: "addAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "bool",
        name: "isSupported",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "borrowCrossChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canBorrow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IGatewayZEVM",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetConfig",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isSupported",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ISimpleLendingProtocol.Asset",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBorrowBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getCollateralValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getDebtValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getHealthFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getSupplyBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSupportedAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedAssetsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalCollateralValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalDebtValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getWithdrawGasFee",
    outputs: [
      {
        internalType: "address",
        name: "gasToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAssetAdded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isLiquidatable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "debtAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "maxAvailableBorrows",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBorrowAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "maxAvailableBorrowsInUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBorrowUsdValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "senderEVM",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
        ],
        internalType: "struct MessageContext",
        name: "",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "onCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "revertMessage",
            type: "bytes",
          },
        ],
        internalType: "struct RevertContext",
        name: "revertContext",
        type: "tuple",
      },
    ],
    name: "onRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supportedAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "priceInUSD",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userBorrows",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSupplies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawCrossChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461015957601f61397438819003918201601f19168301916001600160401b0383118484101761015e5780849260409485528339810103126101595780516001600160a01b038116919082900361015957602001516001600160a01b0381169190829003610159576001600055811561014357600180546001600160a01b03198116841790915560405192906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36080526137ff908161017582396080518181816103aa015281816105eb015281816106510152818161082d01528181610e5501528181610eba015281816110440152818161181e015281816119fb01528181612332015281816123930152818161251e0152818161290d0152818161296e01528181612ae5015281816133d501526134c00152f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c8063028cc65114611a4e578063042e02cf14611a2a578063116191b6146119e5578063118e31b71461196d5780631eee3aa3146119b8578063234a14f91461196d578063293a50771461194957806338a6c25e14611925578063457972de1461189c5780634aa967b01461186f5780635bcfd616146117a15780635ceae9c4146117815780635d0765951461175457806360a8b18a1461171a57806366a6a4bd146115f857806368625807146115da57806369328dec146114f05780636c648fc4146114cc5780636c665a55146113a75780636ec3ab6714611337578063715018a6146112da5780638019f0e11461129b5780638b2a4df5146112745780638da5cb5b1461124b57806394691da0146112315780639aac2c531461120d578063a6d53fbd14610d2e578063aab3f86814610ada578063af9f8390146104a0578063ba3777311461044b578063c68dbb3714610407578063c9028a3614610375578063f11b81881461032d578063f2fde38b146102a4578063f9cf59ea146101d75763fe6bcd7c146101a957600080fd5b346101d45760203660031901126101d45760206101cc6101c7611a99565b6132eb565b604051908152f35b80fd5b50346101d45760203660031901126101d4576001600160a01b036101f9611a99565b1690818152600260205260ff60408220541615610292576040805163d9eeebed60e01b815292839060049082905afa918215610285578192610253575b50604080516001600160a01b039290921682526020820192909252f35b9050610277915060403d60401161027e575b61026f8183611c32565b810190613208565b9038610236565b503d610265565b50604051903d90823e3d90fd5b602491632777a68f60e11b8252600452fd5b50346101d45760203660031901126101d4576102be611a99565b6102c661332f565b6001600160a01b0316801561031957600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b50346101d45760203660031901126101d45760409081906001600160a01b03610354611a99565b168152600260205220600160ff825416910154825191151582526020820152f35b50346101d45760203660031901126101d45760043567ffffffffffffffff81116104035760809060031990360301126101d4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036103f55780806000805160206137aa8339815191526020604051838152a380f35b6282b42960e81b8152600490fd5b5080fd5b50346101d45760203660031901126101d457600435906005548210156101d457602061043283611b8b565b905460405160039290921b1c6001600160a01b03168152f35b50346101d45760403660031901126101d4576040610467611a99565b91610470611aaf565b9260018060a01b031681526003602052209060018060a01b03166000526020526020604060002054604051908152f35b50346101d4576104af36611b4d565b93929190506104bc61352c565b6001600160a01b0382168084526002602052604084205490929060ff1615610ac6578115610ab7576040516370a0823160e01b8152306004820152602081602481875afa908115610782579083918691610a82575b5010610a7357610522828233613060565b15610a64576105318282613596565b338452600460205260408420836000526020526040600020610554838254611e04565b90556040805163d9eeebed60e01b8152959086600481875afa80156107825785968691610a3f575b506001600160a01b0390961695838588036107e15750836105a292939495969750611c6d565b916040516370a0823160e01b8152306004820152602081602481895afa80156107d6578591889161079c575b501061078d5760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152602481018590528693929190602081604481888b5af1801561078257610753575b505b60405160609290921b6001600160601b0319166020830152601482527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610684603484611c32565b60405193858552610696602086611c32565b604051946106a386611c16565b3086528660208701528660408701526060860152856080860152813b1561074f578580946106e760405197889687958694637c0dcb5f60e01b86526004860161326c565b03925af180156107445761072b575b50506040519081527f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b5260203392a36001815580f35b8161073591611c32565b6107405782386106f6565b8280fd5b6040513d84823e3d90fd5b8580fd5b6107749060203d60201161077b575b61076c8183611c32565b81019061322f565b5038610631565b503d610762565b6040513d87823e3d90fd5b63bb55fd2760e01b8652600486fd5b9150506020813d6020116107ce575b816107b860209383611c32565b810103126107c957849051386105ce565b600080fd5b3d91506107ab565b6040513d89823e3d90fd5b92906040516370a0823160e01b81523060048201526020816024818a5afa908115610a345790869189916109ff575b50106109f05760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201879052906020816044818c8c5af180156109c8576109d3575b506040516370a0823160e01b81523360048201526020816024818d5afa9081156109c8578991610996575b50828110610950576040516323b872dd60e01b8152336004820152306024820152604481018490526020816064818d8f5af190811561098b578a9161096c575b5015610950575060405163095ea7b360e01b81526001600160a01b0391909116600482015260248101919091529596949593948794906020908290604490829089905af1801561078257610931575b50610633565b6109499060203d60201161077b5761076c8183611c32565b503861092b565b63aaad7f2960e01b895260048a90526024839052604452606488fd5b610985915060203d60201161077b5761076c8183611c32565b386108dc565b6040513d8c823e3d90fd5b90506020813d6020116109c0575b816109b160209383611c32565b810103126107c957513861089c565b3d91506109a4565b6040513d8b823e3d90fd5b6109eb9060203d60201161077b5761076c8183611c32565b610871565b63bb55fd2760e01b8752600487fd5b9150506020813d602011610a2c575b81610a1b60209383611c32565b810103126107c95785905138610810565b3d9150610a0e565b6040513d8a823e3d90fd5b9050610a5b91965060403d60401161027e5761026f8183611c32565b9590953861057c565b633a23d82560e01b8452600484fd5b63bb55fd2760e01b8452600484fd5b9150506020813d602011610aaf575b81610a9e60209383611c32565b810103126107c95782905138610511565b3d9150610a91565b63162908e360e11b8452600484fd5b632777a68f60e11b84526004839052602484fd5b50346101d45760803660031901126101d457610af4611a99565b610afc611aaf565b906044356001600160a01b03811690819003610d2a5760643592610b1e61352c565b6001600160a01b03168085526002602052604085205490939060ff16158015610d13575b610cff578015610cf05760018060a01b03831692838652600460205260408620836000526020528160406000205410610ce157610b7e90611bbc565b15610cd2578185526002602052610b9c600160408720015482611cbe565b606981029080820460691490151715610cbe57848652600260205260016040872001549081606402916064830403610caa5790610bd891611c9e565b90838652600360205260408620856000526020528160406000205410610c9b57610c04813033866136c8565b838652600460205260408620836000526020526040600020610c27828254611c6d565b9055838652600360205260408620856000526020526040600020610c4c838254611c6d565b9055610c5982338761354e565b604051928352602083015260408201527fac8bbd8fb7420b3123cf9e24d34551e40514ea69c5a1e97c10e513aaf06e7e42339160608180030190a46001815580f35b633a23d82560e01b8652600486fd5b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b86526011600452602486fd5b63317416e560e11b8552600485fd5b63162908e360e11b8652600486fd5b63162908e360e11b8552600485fd5b632777a68f60e11b85526004849052602485fd5b50818552600260205260ff60408620541615610b42565b8380fd5b50346101d457610d3d36611b4d565b9050610d4761352c565b6001600160a01b0383168085526002602052604085205490939060ff1615610cff578215610cf057338552600360205260408520848652602052826040862054106111fe57610d97838233612ea1565b156111ef57610da68382613596565b33855260036020526040852084865260205260408520610dc7848254611c6d565b90556040805163d9eeebed60e01b81529081600481885afa80156111e457869187916111c3575b5084916001600160a01b0316868103610ffc5750610e0d915084611c6d565b6040516370a0823160e01b8152306004820152602081602481895afa80156107d65785918891610fc3575b501061078d5760405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526024810185905286929190602081604481878b5af18015610f9557610fa4575b505b60405160609490941b6001600160601b0319166020850152601484527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690610eee603486611c32565b60405194848652610f00602087611c32565b60405195610f0d87611c16565b3087528560208801528560408801526060870152846080870152823b15610fa0578490610f5060405197889687958694637c0dcb5f60e01b86526004860161326c565b03925af18015610f9557610f81575b506040519081526000805160206137aa83398151915260203392a36001815580f35b83610f8e91949294611c32565b9138610f5f565b6040513d86823e3d90fd5b8480fd5b610fbc9060203d60201161077b5761076c8183611c32565b5038610e9a565b9150506020813d602011610ff4575b81610fdf60209383611c32565b81010312610ff05784905138610e38565b8680fd5b3d9150610fd2565b6040516370a0823160e01b81523060048201526020816024818b5afa80156109c85787918a9161118a575b501061117b5760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201889052906020816044818d8d5af1801561098b5761115e575b506040516323b872dd60e01b8152336004820152306024820152604481018490526020816064818d875af190811561098b578a9161113f575b50156111305760405163095ea7b360e01b81526001600160a01b03919091166004820152602481019290925287939291906020908290604490829088905af18015610f9557611111575b50610e9c565b6111299060203d60201161077b5761076c8183611c32565b503861110b565b633a23d82560e01b8952600489fd5b611158915060203d60201161077b5761076c8183611c32565b386110c1565b6111769060203d60201161077b5761076c8183611c32565b611088565b63bb55fd2760e01b8852600488fd5b9150506020813d6020116111bb575b816111a660209383611c32565b810103126111b75786905138611027565b8880fd5b3d9150611199565b90506111de915060403d60401161027e5761026f8183611c32565b38610dee565b6040513d88823e3d90fd5b633a23d82560e01b8552600485fd5b631e9acf1760e31b8552600485fd5b50346101d457602061122761122136611b13565b91613060565b6040519015158152f35b50346101d457602061122761124536611b13565b91612ea1565b50346101d457806003193601126101d4576001546040516001600160a01b039091168152602090f35b50346101d45761129461128636611ad9565b9161128f61352c565b613470565b6001815580f35b50346101d45760203660031901126101d45760209060ff906040906001600160a01b036112c6611a99565b168152600684522054166040519015158152f35b50346101d457806003193601126101d4576112f361332f565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101d45760203660031901126101d45760408091611355611a99565b816020845161136381611be4565b82815201526001600160a01b03168152600260205220815161138481611be4565b6020600160ff845416151593848452015491019081528251918252516020820152f35b50346101d4576113b636611ad9565b6113be61352c565b6001600160a01b0383168085526002602052604085205490939060ff1615610cff578215610cf0576040516370a0823160e01b8152306004820152602081602481885afa80156111e45784918791611497575b501061148857826114229133613060565b15610a645781611455913386526004602052604086208587526020526040862061144d838254611e04565b90558461354e565b6040519081527f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b5260203392a36001815580f35b63bb55fd2760e01b8552600485fd5b9150506020813d6020116114c4575b816114b360209383611c32565b8101031261074f5783905138611411565b3d91506114a6565b50346101d45760203660031901126101d45760206101cc6114eb611a99565b612e2a565b50346101d4576114ff36611ad9565b61150761352c565b602090846040516115188482611c32565b526001600160a01b03841680865260028352604086205490949060ff16156115c6578315610ce15733865260038352604086208587528352836040872054106115b757836115669133612ea1565b156111ef57906115a7836000805160206137aa83398151915293338852600384526040882087895284526040882061159f838254611c6d565b90558661354e565b6040519283523392a36001815580f35b631e9acf1760e31b8652600486fd5b632777a68f60e11b86526004859052602486fd5b50346101d457806003193601126101d4576020600554604051908152f35b50346101d45760403660031901126101d457611612611a99565b6024359061161e61332f565b670de0b6b3a7640000820291808304670de0b6b3a764000014901517156117065760016040519161164e83611be4565b81835260208301938452818060a01b0316928385526002602052604085209251151560ff8019855416911617835551910155808252600660205260ff60408320541615611699575080f35b600554680100000000000000008110156116f2578060016116bd9201600555611b8b565b81546001600160a01b0360039290921b91821b19169083901b1790558152600660205260408120805460ff1916600117905580f35b634e487b7160e01b83526041600452602483fd5b634e487b7160e01b83526011600452602483fd5b50346101d45760203660031901126101d4576004359060055482101561174557602061043283611b8b565b63162908e360e11b8152600490fd5b50346101d45760403660031901126101d45760206101cc611773611a99565b61177b611aaf565b90612ce0565b50346101d45761129461179336611ad9565b9161179c61352c565b613358565b50346101d45760803660031901126101d45760043567ffffffffffffffff81116104035760609060031990360301126101d4576117dc611aaf565b906064359167ffffffffffffffff831161040357366023840112156104035782600401359067ffffffffffffffff8211610740573660248386010111610740577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361186157602461185e9394019060443590611ff6565b80f35b6282b42960e81b8352600483fd5b50346101d45760403660031901126101d45760206101cc61188e611a99565b611896611aaf565b90611eeb565b50346101d45760403660031901126101d4576118b6611a99565b602435906118c261332f565b6001600160a01b03168083526002602052604083205460ff161561191357670de0b6b3a7640000820291808304670de0b6b3a764000014901517156117065782526002602052600160408320015580f35b632777a68f60e11b8352600452602482fd5b50346101d45760203660031901126101d45760206101cc611944611a99565b611e8f565b50346101d45760203660031901126101d45760206101cc611968611a99565b611e11565b50346101d45760403660031901126101d457604060209161198c611a99565b611994611aaf565b6001600160a01b039182168352600485528383209116825283522054604051908152f35b50346101d45760403660031901126101d45760206101cc6119d7611a99565b6119df611aaf565b90611cd1565b50346101d457806003193601126101d4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101d45760203660031901126101d4576020611227611a49611a99565b611bbc565b50346101d45760403660031901126101d4576040602091611a6d611a99565b611a75611aaf565b6001600160a01b039182168352600385528383209116825283522054604051908152f35b600435906001600160a01b03821682036107c957565b602435906001600160a01b03821682036107c957565b35906001600160a01b03821682036107c957565b60609060031901126107c9576004356001600160a01b03811681036107c95790602435906044356001600160a01b03811681036107c95790565b60609060031901126107c9576004356001600160a01b03811681036107c957906024356001600160a01b03811681036107c9579060443590565b60809060031901126107c9576004356001600160a01b03811681036107c9579060243590604435906064356001600160a01b03811681036107c95790565b600554811015611ba657600560005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b611bc5906132eb565b670de0b6b3a764000081109081611bda575090565b6000191415919050565b6040810190811067ffffffffffffffff821117611c0057604052565b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff821117611c0057604052565b90601f8019910116810190811067ffffffffffffffff821117611c0057604052565b908160209103126107c9575160ff811681036107c95790565b91908203918211611c7a57565b634e487b7160e01b600052601160045260246000fd5b604d8111611c7a57600a0a90565b8115611ca8570490565b634e487b7160e01b600052601260045260246000fd5b81810292918115918404141715611c7a57565b6001600160a01b0390811660009081526003602090815260408083209490931680835293815282822054600282529183902060010154925163313ce56760e01b81529293919291829060049082905afa8015611df85760ff91600091611dc9575b5016816012821015611d7357506012039160128311611c7a57611d6a611d6f92611d64670de0b6b3a764000095611c90565b90611cbe565b611cbe565b0490565b9160128211611d92575b5050670de0b6b3a764000091611d6f91611cbe565b9150916011198301928311611c7a57611dc0611d6f92611dba670de0b6b3a764000095611c90565b90611c9e565b91819350611d7d565b611deb915060203d602011611df1575b611de38183611c32565b810190611c54565b38611d32565b503d611dd9565b6040513d6000823e3d90fd5b91908201809211611c7a57565b600554600091825b828110611e265750505090565b611e2f81611b8b565b90546001600160a01b03848116600090815260046020908152604080832060039690961b9490941c909216808252939091522054611e71575b50600101611e19565b60019194611e82611e889285611eeb565b90611e04565b9390611e68565b611ea1611e9b82612e2a565b91611e11565b908015611ee457670de0b6b3a76400008102908104670de0b6b3a764000003611c7a576714d1120d7b16000090049080821115611ee457611ee191611c6d565b90565b5050600090565b6001600160a01b0390811660009081526004602081815260408084209590941680845294815283832054600282529284902060010154935163313ce56760e01b815293949293929091839182905afa8015611df85760ff91600091611dc9575016816012821015611d7357506012039160128311611c7a57611d6a611d6f92611d64670de0b6b3a764000095611c90565b81601f820112156107c95780359067ffffffffffffffff8211611c005760405192611fb1601f8401601f191660200185611c32565b828452602083830101116107c957816000926020809301838601378301015290565b60005b838110611fe65750506000910152565b8181015183820152602001611fd6565b92608081036121475782016040838203126107c95782359067ffffffffffffffff82116107c957612028918401611f7c565b916001600160a01b039061203e90602001611ac5565b169160405190602082018151926120716020828186019661206081878a611fd3565b81010301601f198101835282611c32565b519020604051602081019065737570706c7960d01b825260068152612097602682611c32565b519020036120ac5750506120aa92613470565b565b6120c86020604051809361206083830196879251928391611fd3565b519020604051602081019064726570617960d81b8252600581526120ed602582611c32565b5190201461213e57505050505b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c696420616374696f6e206f72206d65737361676520666f726d61746044820152fd5b6120aa92613358565b905060e0811461215b575b505050506120fa565b81019060009160a08282031261074057813567ffffffffffffffff8111610d2a5790612188918301611f7c565b9161219560208301611ac5565b6121a6608060408501359401611ac5565b9060018060a01b03169360405190602082018151926121d06020828186019661206081878a611fd3565b51902060405160208101906f3137b93937bba1b937b9b9a1b430b4b760811b825260108152612200603082611c32565b519020036127985750506001600160a01b0385168083526002602052604083205490959060ff1615612784578315612775576040516370a0823160e01b81523060048201526020816024818a5afa908115610f95579085918591612740575b501061273157612270848287613060565b156127225761227f8482613596565b8483526004602052604083208660005260205260406000206122a2858254611e04565b90556040805163d9eeebed60e01b815290816004818a5afa8015610f955784918591612701575b5085916001600160a01b03168881036124d457506122e8915085611c6d565b6040516370a0823160e01b81523060048201526020816024818b5afa90811561078257908691869161249f575b5010610a735760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101869052602081604481888c5af1801561078257612480575b505b60405160609390931b6001600160601b0319166020840152601483527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906123c7603485611c32565b604051938585526123d9602086611c32565b604051946123e686611c16565b3086528660208701528660408701526060860152856080860152823b1561074f5790858094939261242d60405197889687958694637c0dcb5f60e01b86526004860161326c565b03925af180156107445761246b575b505060207f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b5291604051908152a3565b612476828092611c32565b6101d4578061243c565b6124989060203d60201161077b5761076c8183611c32565b5038612373565b9150506020813d6020116124cc575b816124bb60209383611c32565b810103126107c95785905138612315565b3d91506124ae565b6040516370a0823160e01b81523060048201526020816024818d5afa9081156107d65790889188916126cc575b501061078d5760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201899052906020816044818b8f5af18015610a34576126af575b506040516370a0823160e01b8152600481018a9052602081602481865afa908115610a3457889161267d575b50838110612642576040516323b872dd60e01b81526001600160a01b038b166004820152306024820152604481018590526020816064818c885af19081156109c857899161265e575b5015612642575060405163095ea7b360e01b81526001600160a01b0391909116600482015260248101929092526020908290604490829089905af1801561078257612623575b50612375565b61263b9060203d60201161077b5761076c8183611c32565b503861261d565b63aaad7f2960e01b885260048390526024849052604452606487fd5b612677915060203d60201161077b5761076c8183611c32565b386125d7565b90506020813d6020116126a7575b8161269860209383611c32565b810103126107c957513861258e565b3d915061268b565b6126c79060203d60201161077b5761076c8183611c32565b612562565b9150506020813d6020116126f9575b816126e860209383611c32565b810103126107c95787905138612501565b3d91506126db565b905061271c915060403d60401161027e5761026f8183611c32565b386122c9565b633a23d82560e01b8352600483fd5b63bb55fd2760e01b8352600483fd5b9150506020813d60201161276d575b8161275c60209383611c32565b810103126107c9578490513861225f565b3d915061274f565b63162908e360e11b8352600483fd5b632777a68f60e11b83526004869052602483fd5b6127b46020604051809361206083830196879251928391611fd3565b5190206040516020810190713bb4ba34323930bba1b937b9b9a1b430b4b760711b8252601281526127e6603282611c32565b519020146127fd5750505050505038808080612152565b6001600160a01b0385168083526002602052604083205490959060ff16156127845783156127755784835260036020526040832086845260205283604084205410612cd15761284d848287612ea1565b156127225761285c8482613596565b8483526003602052604083208684526020526040832061287d858254611c6d565b90556040805163d9eeebed60e01b815290816004818a5afa8015610f955784918591612cb0575b5085916001600160a01b0316888103612a9b57506128c3915085611c6d565b6040516370a0823160e01b81523060048201526020816024818b5afa908115610782579086918691612a66575b5010610a735760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101869052602081604481888c5af1801561078257612a47575b505b60405160609390931b6001600160601b0319166020840152601483527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906129a2603485611c32565b604051938585526129b4602086611c32565b604051946129c186611c16565b3086528660208701528660408701526060860152856080860152823b1561074f57908580949392612a0860405197889687958694637c0dcb5f60e01b86526004860161326c565b03925af1801561074457916000805160206137aa8339815191529391602093612a37575b5050604051908152a3565b81612a4191611c32565b38612a2c565b612a5f9060203d60201161077b5761076c8183611c32565b503861294e565b9150506020813d602011612a93575b81612a8260209383611c32565b81010312610fa057859051386128f0565b3d9150612a75565b6040516370a0823160e01b81523060048201526020816024818d5afa9081156107d6579088918891612c7b575b501061078d5760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820181905260248201899052906020816044818b8f5af18015610a3457612c5e575b506040516370a0823160e01b8152600481018a9052602081602481865afa908115610a34578891612c28575b50838110612642576040516323b872dd60e01b81526001600160a01b038b166004820152306024820152604481018590526020816064818c885af19081156109c8578991612c09575b5015612642575060405163095ea7b360e01b81526001600160a01b0391909116600482015260248101929092526020908290604490829089905af1801561078257612bea575b50612950565b612c029060203d60201161077b5761076c8183611c32565b5038612be4565b612c22915060203d60201161077b5761076c8183611c32565b38612b9e565b90506020813d602011612c56575b81612c4360209383611c32565b81010312612c52575138612b55565b8780fd5b3d9150612c36565b612c769060203d60201161077b5761076c8183611c32565b612b29565b9150506020813d602011612ca8575b81612c9760209383611c32565b81010312610ff05787905138612ac8565b3d9150612c8a565b9050612ccb915060403d60401161027e5761026f8183611c32565b386128a4565b631e9acf1760e31b8352600483fd5b9060018060a01b03169081600052600260205260ff6040600020541615611ee457612d0d611e9b82612e2a565b908015612e2257670de0b6b3a76400008102908104670de0b6b3a764000003611c7a576714d1120d7b16000090049080821115612e2257612d4d91611c6d565b8160005260026020526001604060002001548015612e2257670de0b6b3a7640000820291808304670de0b6b3a76400001490151715611c7a57612d94602091600493611c9e565b926040519283809263313ce56760e01b82525afa8015611df85760ff91600091612e03575b50166012811015612ddc576012039060128211611c7a57611dba611ee192611c90565b906012821115612dfe576011198201918211611c7a57611d64611ee192611c90565b905090565b612e1c915060203d602011611df157611de38183611c32565b38612db9565b505050600090565b600554600091825b828110612e3f5750505090565b612e4881611b8b565b90546001600160a01b0384811660009081526003602081815260408084209690921b9490941c90921680825293909252902054612e89575b50600101612e32565b60019194611e82612e9a9285611cd1565b9390612e80565b6040516370a0823160e01b81523060048201529092916001600160a01b031690602081602481855afa8015611df857839160009161302b575b5010612e225760405163313ce56760e01b8152602081600481855afa8015611df85760ff9160009161300c575b5016826012821015612fae575060120360128111611c7a57612f58611e9b92612f3f612f6795611d64670de0b6b3a764000095611c90565b905b600052600260205260016040600020015490611cbe565b04612f6284612e2a565b611c6d565b908115612fa757670de0b6b3a7640000810290808204670de0b6b3a76400001490151715611c7a576714d1120d7b16000091612fa291611c9e565b101590565b5050600190565b929060128111612fd4575b5050670de0b6b3a7640000612f58612f6793611e9b93612f41565b9092506011198101908111611c7a57612f58611e9b92613003612f6795611dba670de0b6b3a764000095611c90565b94509250612fb9565b613025915060203d602011611df157611de38183611c32565b38612f07565b9150506020813d602011613058575b8161304760209383611c32565b810103126107c95782905138612eda565b3d915061303a565b6040516370a0823160e01b81523060048201526001600160a01b039092169291602081602481875afa8015611df85783916000916131d3575b5010612e22576130a881612e2a565b9260405163313ce56760e01b8152602081600481855afa8015611df85760ff916000916131b4575b5016836012821015613156575060120360128111611c7a5761310861310f92612f3f61311496611d64670de0b6b3a764000095611c90565b0491611e11565b611e04565b90811561314f57670de0b6b3a7640000810290808204670de0b6b3a76400001490151715611c7a576714d1120d7b16000091612fa291611c9e565b9050151590565b93906012811161317c575b5050670de0b6b3a76400006131086131149461310f93612f41565b9093506011198101908111611c7a5761310861310f926131ab61311496611dba670de0b6b3a764000095611c90565b95509250613161565b6131cd915060203d602011611df157611de38183611c32565b386130d0565b9150506020813d602011613200575b816131ef60209383611c32565b810103126107c95782905138613099565b3d91506131e2565b91908260409103126107c95781516001600160a01b03811681036107c95760209092015190565b908160209103126107c9575180151581036107c95790565b9060209161326081518092818552858086019101611fd3565b601f01601f1916010190565b91929061328190608084526080840190613247565b92602083015260018060a01b03166040820152606081830391015260018060a01b03825116815260208201511515602082015260018060a01b0360408301511660408201526080806132e2606085015160a0606086015260a0850190613247565b93015191015290565b6132f7611e9b82612e2a565b801561332757670de0b6b3a7640000820291808304670de0b6b3a76400001490151715611c7a57611ee191611c9e565b505060001990565b6001546001600160a01b0316330361334357565b63118cdaa760e01b6000523360045260246000fd5b6001600160a01b031660008181526002602052604090205490929060ff161561345b57811561344a576001600160a01b0316600081815260046020908152604080832086845282529091205491927f05f2eeda0e08e4b437f487c8d7d29b14537d15e3488170dc3de5dbdf8dac468492908181111561344357505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303613432575b836000526004825260406000208560005282526040600020613427828254611c6d565b9055604051908152a3565b61343e813033886136c8565b613404565b90506133d3565b63162908e360e11b60005260046000fd5b82632777a68f60e11b60005260045260246000fd5b6001600160a01b031660008181526002602052604090205490929060ff161561345b57811561344a577fd1cf3d156d5f8f0d50f6c122ed609cec09d35c9b9fb3fff6ea0959134dae424e906020907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361351b575b60018060a01b031692836000526003825260406000208560005282526040600020613427828254611e04565b613527843033886136c8565b6134ef565b60026000541461353d576002600055565b633ee5aeb560e01b60005260046000fd5b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448201929092526120aa9161359182606481015b03601f198101845283611c32565b61370a565b6040805163d9eeebed60e01b81526001600160a01b0392909216929082600481865afa908115611df85760009260009261369d575b506020600493946040519485809263313ce56760e01b82525afa928315611df85760009361367a575b5060405163313ce56760e01b81529293602090849060049082906001600160a01b03165afa928315611df85760009361364c575b5061363c60ff918261364495961690613765565b931690613765565b101561344a57565b613644935060ff918261367061363c9360203d602011611df157611de38183611c32565b9550509150613628565b60049350613696602091823d8411611df157611de38183611c32565b93506135f4565b6004935060209492506136be9060403d60401161027e5761026f8183611c32565b92949093506135cb565b6040516323b872dd60e01b60208201526001600160a01b03928316602482015292909116604483015260648201929092526120aa916135918260848101613583565b906000602091828151910182855af115611df8576000513d61375c57506001600160a01b0381163b155b61373b5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415613734565b906012811015613787576012039060128211611c7a57611d64611ee192611c90565b906012821115612dfe576011198201918211611c7a57611dba611ee192611c9056fe9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eba26469706673582212200440dc20cb6d5f120c0ad9db9aef23394c6cd426a7e9227cb86d1ec601ccb82664736f6c634300081a0033";

type SimpleLendingProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleLendingProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleLendingProtocol__factory extends ContractFactory {
  constructor(...args: SimpleLendingProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    gatewayAddress: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleLendingProtocol> {
    return super.deploy(
      gatewayAddress,
      owner,
      overrides || {}
    ) as Promise<SimpleLendingProtocol>;
  }
  override getDeployTransaction(
    gatewayAddress: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gatewayAddress, owner, overrides || {});
  }
  override attach(address: string): SimpleLendingProtocol {
    return super.attach(address) as SimpleLendingProtocol;
  }
  override connect(signer: Signer): SimpleLendingProtocol__factory {
    return super.connect(signer) as SimpleLendingProtocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleLendingProtocolInterface {
    return new utils.Interface(_abi) as SimpleLendingProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleLendingProtocol {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleLendingProtocol;
  }
}
