/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SimpleLendingProtocol,
  SimpleLendingProtocolInterface,
} from "../../contracts/SimpleLendingProtocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "gatewayAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "AssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "HealthFactorTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientCollateral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gasTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "InsufficientGasFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collateralAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "debtAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "repaidDebt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seizedCollateral",
        type: "uint256",
      },
    ],
    name: "Liquidate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Supply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "priceInUSD",
        type: "uint256",
      },
    ],
    name: "addAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "bool",
        name: "isSupported",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "borrowCrossChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canBorrow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IGatewayZEVM",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetConfig",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isSupported",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ISimpleLendingProtocol.Asset",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBorrowBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getCollateralValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getDebtValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getHealthFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getHealthFactorAfterBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "newHealthFactor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getHealthFactorAfterRepay",
    outputs: [
      {
        internalType: "uint256",
        name: "newHealthFactor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getHealthFactorAfterWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "newHealthFactor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getSupplyBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSupportedAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedAssetsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalCollateralValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalDebtValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserPositionData",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCollateralValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDebtValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "healthFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxBorrowUsdValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationThreshold",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "suppliedAssets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "suppliedAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "suppliedValues",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "borrowedAssets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "borrowedAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "borrowedValues",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getWithdrawGasFee",
    outputs: [
      {
        internalType: "address",
        name: "gasToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAssetAdded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isLiquidatable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "debtAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "maxAvailableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "maxAvailableBorrows",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBorrowAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "maxAvailableBorrowsInUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBorrowUsdValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "senderEVM",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
        ],
        internalType: "struct MessageContext",
        name: "context",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "onCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "revertMessage",
            type: "bytes",
          },
        ],
        internalType: "struct RevertContext",
        name: "revertContext",
        type: "tuple",
      },
    ],
    name: "onRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supportedAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "priceInUSD",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userBorrows",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSupplies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawCrossChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461015957601f613eff38819003918201601f19168301916001600160401b0383118484101761015e5780849260409485528339810103126101595780516001600160a01b038116919082900361015957602001516001600160a01b0381169190829003610159576001600055811561014357600180546001600160a01b03198116841790915560405192906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3608052613d8a908161017582396080518181816103e3015281816106330152818161067f0152818161080c01528181610dc801528181610e2d0152818161101401528181611a5601528181611c710152818161270001528181612761015281816128ee01528181612cdc01528181612d3d01528181612eb60152818161380801526138f30152f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80620f244014611d0f578063028cc65114611cc4578063042e02cf14611ca0578063116191b614611c5b578063118e31b714611bc95780631dcb725e14611c415780631eee3aa314611c14578063234a14f914611bc9578063293a507714611ba557806338a6c25e14611b81578063457972de14611af85780634aa967b014611acb5780634f04cb6714611aa75780635bcfd616146119d95780635ceae9c4146119b95780635d0765951461198c57806360a8b18a1461195257806366a6a4bd14611830578063686258071461181257806369328dec146117285780636c648fc4146117045780636c665a55146115df5780636ec3ab671461156f578063715018a6146115125780638019f0e1146114d3578063834f6d7d146111ec5780638b2a4df5146111c55780638da5cb5b1461119c57806390f3367c1461118257806394691da0146111685780639aac2c5314611144578063a6d53fbd14610ca1578063aab3f86814610a4d578063af9f8390146104f5578063ba377731146104a0578063c68dbb371461045c578063c9028a36146103af578063f11b818814610367578063f2fde38b146102de578063f9cf59ea1461020d5763fe6bcd7c146101df57600080fd5b3461020a57602036600319011261020a5760206102026101fd611d29565b613693565b604051908152f35b80fd5b503461020a57602036600319011261020a576001600160a01b0361022f611d29565b1690818152600260205260ff604082205416156102cc576040805163d9eeebed60e01b815292839060049082905afa9182156102bf57819261028d575b50604080516001600160a01b039290921682526020820192909252f35b0390f35b90506102b1915060403d6040116102b8575b6102a98183612280565b8101906135b0565b903861026c565b503d61029f565b50604051903d90823e3d90fd5b602491632777a68f60e11b8252600452fd5b503461020a57602036600319011261020a576102f8611d29565b610300613762565b6001600160a01b0316801561035357600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b503461020a57602036600319011261020a5760409081906001600160a01b0361038e611d29565b168152600260205220600160ff825416910154825191151582526020820152f35b503461020a57602036600319011261020a5760043567ffffffffffffffff811161044a576080600319823603011261044a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361044e5760248101356001600160a01b03811691839183900361044a576020600080516020613d358339815191529160446040519101358152a380f35b5080fd5b6282b42960e81b8252600482fd5b503461020a57602036600319011261020a576004359060055482101561020a57602061048783611e8c565b905460405160039290921b1c6001600160a01b03168152f35b503461020a57604036600319011261020a5760406104bc611d29565b916104c5611d3f565b9260018060a01b031681526003602052209060018060a01b03166000526020526020604060002054604051908152f35b503461020a5761050436611e4e565b939291905061051161395f565b6001600160a01b0382168084526002602052604084205490929060ff1615610a39578115610a2a576040516370a0823160e01b8152306004820152602081602481875afa9081156109cc5790839186916109f5575b50106109e6576105778282336134ca565b156109d75761058682826139d7565b3384526004602052604084208360005260205260406000206105a983825461210f565b90556040805163d9eeebed60e01b8152959086600481875afa80156109cc57859686916109a7575b506001600160a01b0390961695838588036107d55750836105f792939495969750611ebd565b916040516370a0823160e01b8152306004820152602081602481895afa80156107ca5785918891610790575b50106107815785929190610661857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031688613b09565b60405160609290921b6001600160601b0319166020830152601482527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106b2603484612280565b604051938585526106c4602086612280565b604051946106d186612264565b3086528660208701528660408701526060860152856080860152813b1561077d5785809461071560405197889687958694637c0dcb5f60e01b865260048601613614565b03925af1801561077257610759575b50506040519081527f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b5260203392a36001815580f35b8161076391612280565b61076e578238610724565b8280fd5b6040513d84823e3d90fd5b8580fd5b63bb55fd2760e01b8652600486fd5b9150506020813d6020116107c2575b816107ac60209383612280565b810103126107bd5784905138610623565b600080fd5b3d915061079f565b6040513d89823e3d90fd5b92906040516370a0823160e01b81523060048201526020816024818a5afa90811561099c579086918991610967575b5010610958577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661083f868289613b09565b6040516370a0823160e01b81523360048201526020816024818d5afa90811561094d57899161091b575b508281106108c5576040516323b872dd60e01b8152336004820152306024820152604481018490526020816064818d8f5af1908115610910578a916108e1575b50156108c55750906108c091889998969798613b09565b610661565b63aaad7f2960e01b895260048a90526024839052604452606488fd5b610903915060203d602011610909575b6108fb8183612280565b8101906135d7565b386108a9565b503d6108f1565b6040513d8c823e3d90fd5b90506020813d602011610945575b8161093660209383612280565b810103126107bd575138610869565b3d9150610929565b6040513d8b823e3d90fd5b63bb55fd2760e01b8752600487fd5b9150506020813d602011610994575b8161098360209383612280565b810103126107bd5785905138610804565b3d9150610976565b6040513d8a823e3d90fd5b90506109c391965060403d6040116102b8576102a98183612280565b959095386105d1565b6040513d87823e3d90fd5b633a23d82560e01b8452600484fd5b63bb55fd2760e01b8452600484fd5b9150506020813d602011610a22575b81610a1160209383612280565b810103126107bd5782905138610566565b3d9150610a04565b63162908e360e11b8452600484fd5b632777a68f60e11b84526004839052602484fd5b503461020a57608036600319011261020a57610a67611d29565b610a6f611d3f565b906044356001600160a01b03811690819003610c9d5760643592610a9161395f565b6001600160a01b03168085526002602052604085205490939060ff16158015610c86575b610c72578015610c635760018060a01b03831692838652600460205260408620836000526020528160406000205410610c5457610af190611fcd565b15610c45578185526002602052610b0f600160408720015482611ee0565b606981029080820460691490151715610c3157848652600260205260016040872001549081606402916064830403610c1d5790610b4b91611ef3565b90838652600360205260408620856000526020528160406000205410610c0e57610b7781303386613c4e565b838652600460205260408620836000526020526040600020610b9a828254611ebd565b9055838652600360205260408620856000526020526040600020610bbf838254611ebd565b9055610bcc82338761398f565b604051928352602083015260408201527fac8bbd8fb7420b3123cf9e24d34551e40514ea69c5a1e97c10e513aaf06e7e42339160608180030190a46001815580f35b633a23d82560e01b8652600486fd5b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b86526011600452602486fd5b63317416e560e11b8552600485fd5b63162908e360e11b8652600486fd5b63162908e360e11b8552600485fd5b632777a68f60e11b85526004849052602485fd5b50818552600260205260ff60408620541615610ab5565b8380fd5b503461020a57610cb036611e4e565b9050610cba61395f565b6001600160a01b0383168085526002602052604085205490939060ff1615610c72578215610c63573385526003602052604085208486526020528260408620541061113557610d0a8382336133dc565b1561112657610d1983826139d7565b33855260036020526040852084865260205260408520610d3a848254611ebd565b90556040805163d9eeebed60e01b81529081600481885afa801561111b57869187916110fa575b5084916001600160a01b0316868103610f6f5750610d80915084611ebd565b6040516370a0823160e01b8152306004820152602081602481895afa80156107ca5785918891610f36575b50106107815760405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526024810185905286929190602081604481878b5af18015610f0857610f17575b505b60405160609490941b6001600160601b0319166020850152601484527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690610e61603486612280565b60405194848652610e73602087612280565b60405195610e8087612264565b3087528560208801528560408801526060870152846080870152823b15610f13578490610ec360405197889687958694637c0dcb5f60e01b865260048601613614565b03925af18015610f0857610ef4575b50604051908152600080516020613d3583398151915260203392a36001815580f35b83610f0191949294612280565b9138610ed2565b6040513d86823e3d90fd5b8480fd5b610f2f9060203d602011610909576108fb8183612280565b5038610e0d565b9150506020813d602011610f67575b81610f5260209383612280565b81010312610f635784905138610dab565b8680fd5b3d9150610f45565b6040516370a0823160e01b81523060048201526020816024818b5afa801561094d5787918a916110c5575b50106110b6576040516370a0823160e01b8152336004820152602081602481855afa90811561094d578991611080575b506040516323b872dd60e01b8152336004820152306024820152604481018490526020816064818d875af1908115610910578a91611061575b5015611047575087939291611042917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690613b09565b610e0f565b606492899263aaad7f2960e01b8452600452602452604452fd5b61107a915060203d602011610909576108fb8183612280565b38611003565b90506020813d6020116110ae575b8161109b60209383612280565b810103126110aa575138610fca565b8880fd5b3d915061108e565b63bb55fd2760e01b8852600488fd5b9150506020813d6020116110f2575b816110e160209383612280565b810103126110aa5786905138610f9a565b3d91506110d4565b9050611115915060403d6040116102b8576102a98183612280565b38610d61565b6040513d88823e3d90fd5b633a23d82560e01b8552600485fd5b631e9acf1760e31b8552600485fd5b503461020a57602061115e61115836611d69565b916134ca565b6040519015158152f35b503461020a57602061115e61117c36611d69565b916133dc565b503461020a57602061020261119636611d69565b9161338d565b503461020a578060031936011261020a576001546040516001600160a01b039091168152602090f35b503461020a576111e56111d736611da3565b916111e061395f565b6138a3565b6001815580f35b503461020a57602036600319011261020a57611206611d29565b90611210826132a9565b9061121a8361211c565b9261122481613693565b61122d8261219a565b918384928594600554915b8287106114365761127c965061124d84613347565b9261126061125a86613347565b95613347565b9561126a88613347565b9761127481613347565b998a91613347565b9a80898d8a8d859686945b8d8b871061133057505050505050505050505050604051998a998a5260208a01526040890152606088015260808701670f43fc2c04ee0000905260a08701610160905261016087016112d891611ddd565b86810360c08801526112e991611e1a565b85810360e08701526112fa91611e1a565b84810361010086015261130c91611ddd565b83810361012085015261131e91611e1a565b82810361014084015261028991611e1a565b8a9061133b88611e8c565b60018060a01b0391549060031b1c169560018060a01b0383168b52600360205260408b2060018060a01b0388168c5260205260408b20549182611404575b505050506001600160a01b038a81168952600460209081526040808b209287168b52919052882054929050826113bc575b50505050506001018d8a8d8f8e611287565b976113eb846113f796946113e4846113f196819960019c9f836113de91613379565b52613379565b528b6121f3565b92613379565b52613320565b9390508d38808f8f6113aa565b878b95946113f1946114248861142a9a9f96856113de836113eb99613379565b526120d0565b948e898f8f8190611379565b9193949561144381611e8c565b90546001600160a01b038881168b52600360208181526040808e209590921b9390931c909116808c52929091528920546114c3575b6001600160a01b038781168a52600460209081526040808c20939092168b52919091528820546114af575b60010195949391611238565b956114bb600191613320565b9690506114a3565b936114cd90613320565b93611478565b503461020a57602036600319011261020a5760209060ff906040906001600160a01b036114fe611d29565b168152600684522054166040519015158152f35b503461020a578060031936011261020a5761152b613762565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461020a57602036600319011261020a576040809161158d611d29565b816020845161159b81612232565b82815201526001600160a01b0316815260026020522081516115bc81612232565b6020600160ff845416151593848452015491019081528251918252516020820152f35b503461020a576115ee36611da3565b6115f661395f565b6001600160a01b0383168085526002602052604085205490939060ff1615610c72578215610c63576040516370a0823160e01b8152306004820152602081602481885afa801561111b57849187916116cf575b50106116c0578261165a91336134ca565b156109d7578161168d913386526004602052604086208587526020526040862061168583825461210f565b90558461398f565b6040519081527f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b5260203392a36001815580f35b63bb55fd2760e01b8552600485fd5b9150506020813d6020116116fc575b816116eb60209383612280565b8101031261077d5783905138611649565b3d91506116de565b503461020a57602036600319011261020a576020610202611723611d29565b6132a9565b503461020a5761173736611da3565b61173f61395f565b602090846040516117508482612280565b526001600160a01b03841680865260028352604086205490949060ff16156117fe578315610c545733865260038352604086208587528352836040872054106117ef578361179e91336133dc565b1561112657906117df83600080516020613d358339815191529333885260038452604088208789528452604088206117d7838254611ebd565b90558661398f565b6040519283523392a36001815580f35b631e9acf1760e31b8652600486fd5b632777a68f60e11b86526004859052602486fd5b503461020a578060031936011261020a576020600554604051908152f35b503461020a57604036600319011261020a5761184a611d29565b60243590611856613762565b670de0b6b3a7640000820291808304670de0b6b3a7640000149015171561193e5760016040519161188683612232565b81835260208301938452818060a01b0316928385526002602052604085209251151560ff8019855416911617835551910155808252600660205260ff604083205416156118d1575080f35b6005546801000000000000000081101561192a578060016118f59201600555611e8c565b81546001600160a01b0360039290921b91821b19169083901b1790558152600660205260408120805460ff1916600117905580f35b634e487b7160e01b83526041600452602483fd5b634e487b7160e01b83526011600452602483fd5b503461020a57602036600319011261020a576004359060055482101561197d57602061048783611e8c565b63162908e360e11b8152600490fd5b503461020a57604036600319011261020a5760206102026119ab611d29565b6119b3611d3f565b906130c8565b503461020a576111e56119cb36611da3565b916119d461395f565b61378b565b503461020a57608036600319011261020a5760043567ffffffffffffffff811161044a57606090600319903603011261020a57611a14611d3f565b906064359167ffffffffffffffff831161044a573660238401121561044a5782600401359067ffffffffffffffff821161076e57366024838601011161076e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303611a99576024611a9693940190604435906123ad565b80f35b6282b42960e81b8352600483fd5b503461020a57602036600319011261020a576020610202611ac6611d29565b6122a2565b503461020a57604036600319011261020a576020610202611aea611d29565b611af2611d3f565b906121f3565b503461020a57604036600319011261020a57611b12611d29565b60243590611b1e613762565b6001600160a01b03168083526002602052604083205460ff1615611b6f57670de0b6b3a7640000820291808304670de0b6b3a7640000149015171561193e5782526002602052600160408320015580f35b632777a68f60e11b8352600452602482fd5b503461020a57602036600319011261020a576020610202611ba0611d29565b61219a565b503461020a57602036600319011261020a576020610202611bc4611d29565b61211c565b503461020a57604036600319011261020a576040602091611be8611d29565b611bf0611d3f565b6001600160a01b039182168352600485528383209116825283522054604051908152f35b503461020a57604036600319011261020a576020610202611c33611d29565b611c3b611d3f565b906120d0565b503461020a576020610202611c5536611d69565b91611ff5565b503461020a578060031936011261020a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461020a57602036600319011261020a57602061115e611cbf611d29565b611fcd565b503461020a57604036600319011261020a576040602091611ce3611d29565b611ceb611d3f565b6001600160a01b039182168352600385528383209116825283522054604051908152f35b503461020a576020610202611d2336611d69565b91611f13565b600435906001600160a01b03821682036107bd57565b602435906001600160a01b03821682036107bd57565b35906001600160a01b03821682036107bd57565b60609060031901126107bd576004356001600160a01b03811681036107bd57906024356001600160a01b03811681036107bd579060443590565b60609060031901126107bd576004356001600160a01b03811681036107bd5790602435906044356001600160a01b03811681036107bd5790565b906020808351928381520192019060005b818110611dfb5750505090565b82516001600160a01b0316845260209384019390920191600101611dee565b906020808351928381520192019060005b818110611e385750505090565b8251845260209384019390920191600101611e2b565b60809060031901126107bd576004356001600160a01b03811681036107bd579060243590604435906064356001600160a01b03811681036107bd5790565b600554811015611ea757600560005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b91908203918211611eca57565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715611eca57565b8115611efd570490565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b03821660008181526002602052604090205491929160ff1615611fc457611f408361211c565b938415611fb957611f6c92611f66926000526002602052600160406000200154916136cf565b916132a9565b6000919081811115611fb157611f829250611ebd565b905b670de0b6b3a7640000820291808304670de0b6b3a76400001490151715611eca57611fae91611ef3565b90565b505090611f84565b505050505060001990565b50505050600090565b611fd690613693565b670f43fc2c04ee000081109081611feb575090565b6000191415919050565b6001600160a01b0382166000818152600260205260409020549193929160ff16156120c6576120809061204461202a8661211c565b9482600052600260205284600160406000200154916136cf565b9260018060a01b0386166000526004602052604060002082600052602052604060002054916000526002602052600160406000200154916136cf565b90818111156120bf57505b808211156120b55761209c91611ebd565b905b81156120ad57611f82906132a9565b505060001990565b505060009061209e565b905061208b565b5050505060001990565b6001600160a01b039081166000908152600360209081526040808320938516835292815282822054600290915291902060010154611fae9290916136cf565b91908201809211611eca57565b600554600091825b8281106121315750505090565b61213a81611e8c565b90546001600160a01b03848116600090815260046020908152604080832060039690961b9490941c90921680825293909152205461217c575b50600101612124565b6001919461218d61219392856121f3565b9061210f565b9390612173565b6121ac6121a6826132a9565b9161211c565b9080156121ec57670de0b6b3a76400008102908104670de0b6b3a764000003611eca576714d1120d7b160000900490808211156121ec57611fae91611ebd565b5050600090565b6001600160a01b039081166000908152600460209081526040808320938516835292815282822054600290915291902060010154611fae9290916136cf565b6040810190811067ffffffffffffffff82111761224e57604052565b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761224e57604052565b90601f8019910116810190811067ffffffffffffffff82111761224e57604052565b6001600160a01b031660008181526002602052604090205460ff161561232d576020602491604051928380926370a0823160e01b82523060048301525afa908115612321576000916122f2575090565b90506020813d602011612319575b8161230d60209383612280565b810103126107bd575190565b3d9150612300565b6040513d6000823e3d90fd5b50600090565b81601f820112156107bd5780359067ffffffffffffffff821161224e5760405192612368601f8401601f191660200185612280565b828452602083830101116107bd57816000926020809301838601378301015290565b60005b83811061239d5750506000910152565b818101518382015260200161238d565b926080810361250b5782016040838203126107bd5782359067ffffffffffffffff82116107bd576123df918401612333565b916001600160a01b03906123f590602001611d55565b169160405190602082018151926124286020828186019661241781878a61238a565b81010301601f198101835282612280565b519020604051602081019065737570706c7960d01b82526006815261244e602682612280565b51902003612463575050612461926138a3565b565b61247f602060405180936124178383019687925192839161238a565b519020604051602081019064726570617960d81b8252600581526124a4602582612280565b5190201461250257505050505b60405162461bcd60e51b815260206004820152602360248201527f496e76616c6964206f7065726174696f6e206f72206d65737361676520666f726044820152621b585d60ea1b6064820152608490fd5b6124619261378b565b905060e08193929314612522575b505050506124b1565b82019060009160a08482031261076e57833567ffffffffffffffff8111610c9d579061254f918501612333565b9161255c60208501611d55565b93604081013592612574608060608401359301611d55565b9560018060a01b031694604051906020820181519261259e6020828186019661241781878a61238a565b51902060405160208101906f3137b93937bba1b937b9b9a1b430b4b760811b8252601081526125ce603082612280565b51902003612b665750506001600160a01b0381168084526002602052604084205490969060ff1615612b52578415610a2a576040516370a0823160e01b81523060048201526020816024818b5afa9081156109cc579086918691612b1d575b5010612b0e5761263e8583886134ca565b156109d75761264d85836139d7565b85845260046020526040842087600052602052604060002061267086825461210f565b90556040805163d9eeebed60e01b815290816004818b5afa80156109cc5785918691612aed575b5086916001600160a01b03168981036128ac57506126b6915086611ebd565b6040516370a0823160e01b81523060048201526020816024818c5afa90811561111b579087918791612877575b50106111355760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101879052602081604481898d5af1801561111b57612858575b505b60405160609290921b6001600160601b0319166020830152601482527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691612795603482612280565b604051946020860152602085526127ad604086612280565b604051946127ba86612264565b888652600160208701528860408701526060860152620493e06080860152823b1561077d5790858094939261280560405197889687958694637c0dcb5f60e01b865260048601613614565b03925af1801561077257612843575b505060207f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b5291604051908152a3565b61284e828092612280565b61020a5780612814565b6128709060203d602011610909576108fb8183612280565b5038612741565b9150506020813d6020116128a4575b8161289360209383612280565b810103126107bd57869051386126e3565b3d9150612886565b6040516370a0823160e01b81523060048201526020816024818e5afa90811561099c579089918991612ab8575b5010612aa95760405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660048201819052602482018a9052906020818d818c816044810103925af1801561094d57612a8c575b506040516370a0823160e01b8152600481018b9052602081602481865afa90811561094d578991612a5a575b50838110612a1f576040516323b872dd60e01b81526001600160a01b038c166004820152306024820152604481018590526020816064818d885af1908115610910578a91612a3b575b5015612a1f575060405163095ea7b360e01b81526001600160a01b039190911660048201526024810192909252602090829060449082908a905af1801561111b57612a00575b50612743565b612a189060203d602011610909576108fb8183612280565b50386129fa565b63aaad7f2960e01b895260048390526024849052604452606488fd5b612a54915060203d602011610909576108fb8183612280565b386129b4565b90506020813d602011612a84575b81612a7560209383612280565b810103126107bd57513861296b565b3d9150612a68565b612aa49060203d602011610909576108fb8183612280565b61293f565b631e9acf1760e31b8752600487fd5b9150506020813d602011612ae5575b81612ad460209383612280565b810103126107bd57889051386128d9565b3d9150612ac7565b9050612b08915060403d6040116102b8576102a98183612280565b38612697565b631e9acf1760e31b8452600484fd5b9150506020813d602011612b4a575b81612b3960209383612280565b810103126107bd578590513861262d565b3d9150612b2c565b632777a68f60e11b84526004879052602484fd5b612b82602060405180936124178383019687925192839161238a565b5190206040516020810190713bb4ba34323930bba1b937b9b9a1b430b4b760711b825260128152612bb4603282612280565b51902014612bcc575050505050505038808080612519565b6001600160a01b0381168084526002602052604084205490969060ff1615612b52578415610a2a5785845260036020526040842087855260205284604085205410612b0e57612c1c8583886133dc565b156109d757612c2b85836139d7565b85845260036020526040842087855260205260408420612c4c868254611ebd565b90556040805163d9eeebed60e01b815290816004818b5afa80156109cc578591869161308e575b5086916001600160a01b0316898103612e745750612c92915086611ebd565b6040516370a0823160e01b81523060048201526020816024818c5afa90811561111b579087918791612e3f575b50106111355760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101879052602081604481898d5af1801561111b57612e20575b505b60405160609290921b6001600160601b0319166020830152601482527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691612d71603482612280565b60405194602086015260208552612d89604086612280565b60405194612d9686612264565b888652600160208701528860408701526060860152620493e06080860152823b1561077d57908580949392612de160405197889687958694637c0dcb5f60e01b865260048601613614565b03925af180156107725791600080516020613d358339815191529391602093612e10575b5050604051908152a3565b81612e1a91612280565b38612e05565b612e389060203d602011610909576108fb8183612280565b5038612d1d565b9150506020813d602011612e6c575b81612e5b60209383612280565b8101031261077d5786905138612cbf565b3d9150612e4e565b6040516370a0823160e01b81523060048201526020816024818e5afa90811561099c579089918991613055575b5010612aa95760405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660048201819052602482018a9052906020818d818c816044810103925af1801561094d57613038575b506040516370a0823160e01b8152600481018b9052602081602481865afa90811561094d578991613006575b50838110612a1f576040516323b872dd60e01b81526001600160a01b038c166004820152306024820152604481018590526020816064818d885af1908115610910578a91612fe7575b5015612a1f575060405163095ea7b360e01b81526001600160a01b039190911660048201526024810192909252602090829060449082908a905af1801561111b57612fc8575b50612d1f565b612fe09060203d602011610909576108fb8183612280565b5038612fc2565b613000915060203d602011610909576108fb8183612280565b38612f7c565b90506020813d602011613030575b8161302160209383612280565b810103126110aa575138612f33565b3d9150613014565b6130509060203d602011610909576108fb8183612280565b612f07565b9150506020813d602011613086575b8161307160209383612280565b810103126130825788905138612ea1565b8780fd5b3d9150613064565b90506130a9915060403d6040116102b8576102a98183612280565b38612c73565b908160209103126107bd575160ff811681036107bd5790565b919060018060a01b03169182600052600260205260ff60406000205416156132a2576130f66121a6826132a9565b90801561329a57670de0b6b3a76400008102908104670de0b6b3a764000003611eca576714d1120d7b16000090048181111561329a579061313691611ebd565b826000526002602052600160406000200154801561329a57670de0b6b3a7640000820291808304670de0b6b3a76400001490151715611eca5761317891611ef3565b60405163313ce56760e01b8152602081600481875afa80156123215760ff9160009161326b575b50166012811015613237576012039060128211611eca576131c26131c892613981565b90611ef3565b602460208294604051928380926370a0823160e01b82523060048301525afa90811561232157600091613205575b508091116132015750565b9150565b906020823d60201161322f575b8161321f60209383612280565b8101031261020a575051386131f6565b3d9150613212565b906012821115613264576011198201918211611eca5761325961325f92613981565b90611ee0565b6131c8565b90506131c8565b61328d915060203d602011613293575b6132858183612280565b8101906130af565b3861319f565b503d61327b565b506000925050565b5060009150565b600554600091825b8281106132be5750505090565b6132c781611e8c565b90546001600160a01b0384811660009081526003602081815260408084209690921b9490941c90921680825293909252902054613308575b506001016132b1565b6001919461218d61331992856120d0565b93906132ff565b6000198114611eca5760010190565b67ffffffffffffffff811161224e5760051b60200190565b906133518261332f565b61335e6040519182612280565b828152809261336f601f199161332f565b0190602036910137565b8051821015611ea75760209160051b010190565b6001600160a01b038216600081815260026020526040902054919392909160ff1615611fc45761209c9261218d916133c48661211c565b936000526002602052600160406000200154916136cf565b6040516370a0823160e01b8152306004820152909291906001600160a01b03821690602081602481855afa8015612321578491600091613495575b5010611fc45761344e926121a692613440926000526002602052600160406000200154916136cf565b613449846132a9565b611ebd565b90811561348e57670de0b6b3a7640000810290808204670de0b6b3a76400001490151715611eca576714d1120d7b1600009161348991611ef3565b101590565b5050600190565b9150506020813d6020116134c2575b816134b160209383612280565b810103126107bd5783905138613417565b3d91506134a4565b6040516370a0823160e01b81523060048201526001600160a01b0383169390602081602481885afa801561232157829160009161357b575b5010611fc4576121a6613534916135399461351c856132a9565b966000526002602052600160406000200154916136cf565b61210f565b90811561357457670de0b6b3a7640000810290808204670de0b6b3a76400001490151715611eca576714d1120d7b1600009161348991611ef3565b9050151590565b9150506020813d6020116135a8575b8161359760209383612280565b810103126107bd5781905138613502565b3d915061358a565b91908260409103126107bd5781516001600160a01b03811681036107bd5760209092015190565b908160209103126107bd575180151581036107bd5790565b906020916136088151809281855285808601910161238a565b601f01601f1916010190565b919290613629906080845260808401906135ef565b92602083015260018060a01b03166040820152606081830391015260018060a01b03825116815260208201511515602082015260018060a01b03604083015116604082015260808061368a606085015160a0606086015260a08501906135ef565b93015191015290565b61369f6121a6826132a9565b80156120ad57670de0b6b3a7640000820291808304670de0b6b3a76400001490151715611eca57611fae91611ef3565b918215801561375a575b6137525760405163313ce56760e01b815291602090839060049082906001600160a01b03165afa801561232157670de0b6b3a76400009360ff61372a9261372f95600091613733575b501690613c90565b611ee0565b0490565b61374c915060203d602011613293576132858183612280565b38613722565b505050600090565b5080156136d9565b6001546001600160a01b0316330361377657565b63118cdaa760e01b6000523360045260246000fd5b6001600160a01b031660008181526002602052604090205490929060ff161561388e57811561387d576001600160a01b0316600081815260046020908152604080832086845282529091205491927f05f2eeda0e08e4b437f487c8d7d29b14537d15e3488170dc3de5dbdf8dac468492908181111561387657505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303613865575b83600052600482526040600020856000528252604060002061385a828254611ebd565b9055604051908152a3565b61387181303388613c4e565b613837565b9050613806565b63162908e360e11b60005260046000fd5b82632777a68f60e11b60005260045260246000fd5b6001600160a01b031660008181526002602052604090205490929060ff161561388e57811561387d577fd1cf3d156d5f8f0d50f6c122ed609cec09d35c9b9fb3fff6ea0959134dae424e906020907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361394e575b60018060a01b03169283600052600382526040600020856000528252604060002061385a82825461210f565b61395a84303388613c4e565b613922565b600260005414613970576002600055565b633ee5aeb560e01b60005260046000fd5b604d8111611eca57600a0a90565b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044820192909252612461916139d282606481015b03601f198101845283612280565b613cd9565b6040805163d9eeebed60e01b81526001600160a01b0392909216929082600481865afa90811561232157600092600092613ade575b506020600493946040519485809263313ce56760e01b82525afa92831561232157600093613abb575b5060405163313ce56760e01b81529293602090849060049082906001600160a01b03165afa92831561232157600093613a8d575b50613a7d60ff9182613a8595961690613c90565b931690613c90565b101561387d57565b613a85935060ff9182613ab1613a7d9360203d602011613293576132858183612280565b9550509150613a69565b60049350613ad7602091823d8411613293576132858183612280565b9350613a35565b600493506020949250613aff9060403d6040116102b8576102a98183612280565b9294909350613a0c565b604051636eb1769f60e11b81523060048201526001600160a01b03838116602483018190529490831691602081604481865afa90811561232157600091613c1a575b50613b9494613ba2613b6160209460009461210f565b60405163095ea7b360e01b8682019081526001600160a01b03909416602482015260448101919091529687906064820190565b03601f198101885287612280565b85519082865af1903d6000519083613bfb575b50505015613bc257505050565b6139d2612461936040519063095ea7b360e01b602083015260248201526000604482015260448152613bf5606482612280565b82613cd9565b91925090613c1057503b15155b388080613bb5565b6001915014613c08565b90506020813d602011613c46575b81613c3560209383612280565b810103126107bd5751613b94613b4b565b3d9150613c28565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064820192909252612461916139d282608481016139c4565b906012811015613cb2576012039060128211611eca57613259611fae92613981565b906012821115613cd4576011198201918211611eca576131c2611fae92613981565b905090565b906000602091828151910182855af115612321576000513d613d2b57506001600160a01b0381163b155b613d0a5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415613d0356fe9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eba2646970667358221220edbc36b505a948297bcae3ecf0601a81962a242e2065f9741c0546d2d6f6c80164736f6c634300081a0033";

type SimpleLendingProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleLendingProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleLendingProtocol__factory extends ContractFactory {
  constructor(...args: SimpleLendingProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    gatewayAddress: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleLendingProtocol> {
    return super.deploy(
      gatewayAddress,
      owner,
      overrides || {}
    ) as Promise<SimpleLendingProtocol>;
  }
  override getDeployTransaction(
    gatewayAddress: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gatewayAddress, owner, overrides || {});
  }
  override attach(address: string): SimpleLendingProtocol {
    return super.attach(address) as SimpleLendingProtocol;
  }
  override connect(signer: Signer): SimpleLendingProtocol__factory {
    return super.connect(signer) as SimpleLendingProtocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleLendingProtocolInterface {
    return new utils.Interface(_abi) as SimpleLendingProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleLendingProtocol {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleLendingProtocol;
  }
}
