/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1363__factory>;
    getContractFactory(
      name: "IERC1967",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1967__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Utils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Utils__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "INotSupportedMethods",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INotSupportedMethods__factory>;
    getContractFactory(
      name: "Callable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Callable__factory>;
    getContractFactory(
      name: "IGatewayEVM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGatewayEVM__factory>;
    getContractFactory(
      name: "IGatewayEVMErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGatewayEVMErrors__factory>;
    getContractFactory(
      name: "IGatewayEVMEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGatewayEVMEvents__factory>;
    getContractFactory(
      name: "Abortable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Abortable__factory>;
    getContractFactory(
      name: "Revertable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Revertable__factory>;
    getContractFactory(
      name: "GatewayZEVM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GatewayZEVM__factory>;
    getContractFactory(
      name: "IGatewayZEVM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGatewayZEVM__factory>;
    getContractFactory(
      name: "IGatewayZEVMErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGatewayZEVMErrors__factory>;
    getContractFactory(
      name: "IGatewayZEVMEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGatewayZEVMEvents__factory>;
    getContractFactory(
      name: "IWETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH9__factory>;
    getContractFactory(
      name: "IZRC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZRC20__factory>;
    getContractFactory(
      name: "IZRC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZRC20Metadata__factory>;
    getContractFactory(
      name: "ZRC20Events",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZRC20Events__factory>;
    getContractFactory(
      name: "UniversalContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniversalContract__factory>;
    getContractFactory(
      name: "ZContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZContract__factory>;
    getContractFactory(
      name: "DepositContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DepositContract__factory>;
    getContractFactory(
      name: "IPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracle__factory>;
    getContractFactory(
      name: "ISimpleLendingProtocol",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISimpleLendingProtocol__factory>;
    getContractFactory(
      name: "IUniversalLendingProtocol",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniversalLendingProtocol__factory>;
    getContractFactory(
      name: "IZRC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZRC20__factory>;
    getContractFactory(
      name: "MockPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPriceOracle__factory>;
    getContractFactory(
      name: "MockZRC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockZRC20__factory>;
    getContractFactory(
      name: "PriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracle__factory>;
    getContractFactory(
      name: "SimpleLendingProtocol",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleLendingProtocol__factory>;
    getContractFactory(
      name: "SimpleLendingProtocolBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleLendingProtocolBase__factory>;
    getContractFactory(
      name: "Universal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Universal__factory>;
    getContractFactory(
      name: "UniversalLendingProtocol",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniversalLendingProtocol__factory>;

    getContractAt(
      name: "AccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC1363",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1363>;
    getContractAt(
      name: "IERC1967",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1967>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Utils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Utils>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SafeERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "Address",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "INotSupportedMethods",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INotSupportedMethods>;
    getContractAt(
      name: "Callable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Callable>;
    getContractAt(
      name: "IGatewayEVM",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGatewayEVM>;
    getContractAt(
      name: "IGatewayEVMErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGatewayEVMErrors>;
    getContractAt(
      name: "IGatewayEVMEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGatewayEVMEvents>;
    getContractAt(
      name: "Abortable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Abortable>;
    getContractAt(
      name: "Revertable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Revertable>;
    getContractAt(
      name: "GatewayZEVM",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GatewayZEVM>;
    getContractAt(
      name: "IGatewayZEVM",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGatewayZEVM>;
    getContractAt(
      name: "IGatewayZEVMErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGatewayZEVMErrors>;
    getContractAt(
      name: "IGatewayZEVMEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGatewayZEVMEvents>;
    getContractAt(
      name: "IWETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH9>;
    getContractAt(
      name: "IZRC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZRC20>;
    getContractAt(
      name: "IZRC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZRC20Metadata>;
    getContractAt(
      name: "ZRC20Events",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZRC20Events>;
    getContractAt(
      name: "UniversalContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniversalContract>;
    getContractAt(
      name: "ZContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZContract>;
    getContractAt(
      name: "DepositContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DepositContract>;
    getContractAt(
      name: "IPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracle>;
    getContractAt(
      name: "ISimpleLendingProtocol",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISimpleLendingProtocol>;
    getContractAt(
      name: "IUniversalLendingProtocol",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniversalLendingProtocol>;
    getContractAt(
      name: "IZRC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZRC20>;
    getContractAt(
      name: "MockPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPriceOracle>;
    getContractAt(
      name: "MockZRC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockZRC20>;
    getContractAt(
      name: "PriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracle>;
    getContractAt(
      name: "SimpleLendingProtocol",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleLendingProtocol>;
    getContractAt(
      name: "SimpleLendingProtocolBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleLendingProtocolBase>;
    getContractAt(
      name: "Universal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Universal>;
    getContractAt(
      name: "UniversalLendingProtocol",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniversalLendingProtocol>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
